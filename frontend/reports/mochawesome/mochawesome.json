{
  "stats": {
    "suites": 2,
    "tests": 23,
    "passes": 16,
    "pending": 0,
    "failures": 7,
    "start": "2025-10-20T22:46:26.242Z",
    "end": "2025-10-20T22:47:08.507Z",
    "duration": 42265,
    "testsRegistered": 23,
    "passPercent": 69.56521739130434,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3d566218-7609-47e7-9d96-e850e0d8335f",
      "title": "",
      "fullFile": "cypress\\e2e\\Login.cy.js",
      "file": "cypress\\e2e\\Login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
          "title": "Login (DOM atual)",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "mostra erro com credenciais inválidas",
              "fullTitle": "Login (DOM atual) mostra erro com credenciais inválidas",
              "timedOut": null,
              "duration": 1628,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Invalid credentials'\n  }\n}).as('loginFail');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginFail');\ncy.get('@alert').should('have.been.called');\ncy.get('@alert').should('have.been.calledWithMatch', /invalid|inválid/i);\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "e6c6e1fa-acdd-456c-ade8-98a5143898f4",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login com sucesso redireciona",
              "fullTitle": "Login (DOM atual) login com sucesso redireciona",
              "timedOut": null,
              "duration": 1095,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  headers: {\n    'content-type': 'application/json'\n  },\n  body: {\n    access: 'fake-access-token',\n    refresh: 'fake-refresh-token'\n  }\n}).as('loginOk');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginOk');\ncy.location('pathname').should('not.include', 'login');",
              "err": {},
              "uuid": "75be58b0-cad3-4585-92b8-0516af0d1d59",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "erro 500 mostra mensagem amigável (alert)",
              "fullTitle": "Login (DOM atual) erro 500 mostra mensagem amigável (alert)",
              "timedOut": null,
              "duration": 1135,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 500,\n  body: {\n    detail: 'Server error'\n  }\n}).as('serverErr');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@serverErr');\ncy.get('@alert').should('have.been.calledWithMatch', /erro|servidor|tente novamente/i);\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "5db507d1-2665-4548-b72e-458e0365ac95",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validação 400 (faltou username/password) — força backend",
              "fullTitle": "Login (DOM atual) validação 400 (faltou username/password) — força backend",
              "timedOut": null,
              "duration": 225,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 400,\n  body: {\n    username: ['Este campo é obrigatório.'],\n    password: ['Este campo é obrigatório.']\n  }\n}).as('badReq');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\n// Desliga validação nativa p/ permitir o POST sem campos\ncy.get('form.login-form').invoke('attr', 'novalidate', 'novalidate');\ncy.get('input[name=\"username\"]').invoke('prop', 'required', false);\ncy.get('input[name=\"password\"]').invoke('prop', 'required', false);\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@badReq');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "fb4d97ed-a724-4025-9f57-c1fccab11142",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "401 sem \"detail\" não quebra (mostra algum alerta)",
              "fullTitle": "Login (DOM atual) 401 sem \"detail\" não quebra (mostra algum alerta)",
              "timedOut": null,
              "duration": 1006,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    error: 'no-detail'\n  }\n}).as('weird');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@weird');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "b3d64d04-4e5e-4ffb-b68b-ae527aa928bf",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "link de cadastro navega corretamente",
              "fullTitle": "Login (DOM atual) link de cadastro navega corretamente",
              "timedOut": null,
              "duration": 289,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('a', /sign\\s*up|criar\\s*conta/i).click({\n  force: true\n});\ncy.location('pathname').should('match', /register|signup|sign\\-up|cadastro/i);",
              "err": {},
              "uuid": "efb02a97-96b0-4e40-9d7e-562dfb496b16",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "password oculto por padrão; alterna se existir toggle",
              "fullTitle": "Login (DOM atual) password oculto por padrão; alterna se existir toggle",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('form.login-form input[name=\"password\"]').should('have.attr', 'type', 'password');\ncy.get('body').then($b => {\n  const selectors = ['[data-cy=\"toggle-password\"]', 'button[aria-label*=\"mostrar\"]', 'button[aria-label*=\"show\"]', '.password-toggle', 'button:contains(\"Mostrar\")', 'button:contains(\"Show\")'];\n  const found = selectors.find(s => $b.find(s).length > 0);\n  if (found) {\n    cy.get(found).click();\n    cy.get('form.login-form input[name=\"password\"]').should('have.attr', 'type', 'text');\n  }\n});",
              "err": {},
              "uuid": "0c7998ad-57b6-490e-9106-6d69c01e1502",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTML5 required: bloqueia submit quando username está vazio (nenhum POST)",
              "fullTitle": "Login (DOM atual) HTML5 required: bloqueia submit quando username está vazio (nenhum POST)",
              "timedOut": null,
              "duration": 883,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, () => {\n  throw new Error('Não deveria chamar API com username vazio (required)');\n}).as('guard');\ncy.get('form.login-form input[name=\"username\"]').clear(); // vazio\ncy.get('form.login-form input[name=\"password\"]').clear().type('Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\ncy.get('form.login-form input[name=\"username\"]').then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('include', 'login');\ncy.wait(100);",
              "err": {},
              "uuid": "176fcf23-6502-4f00-b4b6-542db5a8a900",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTML5 required: bloqueia submit quando password está vazio (nenhum POST)",
              "fullTitle": "Login (DOM atual) HTML5 required: bloqueia submit quando password está vazio (nenhum POST)",
              "timedOut": null,
              "duration": 952,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, () => {\n  throw new Error('Não deveria chamar API com password vazio (required)');\n}).as('guard');\ncy.get('form.login-form input[name=\"username\"]').clear().type('admin@example.com');\ncy.get('form.login-form input[name=\"password\"]').clear(); // vazio\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\ncy.get('form.login-form input[name=\"password\"]').then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('include', 'login');\ncy.wait(100);",
              "err": {},
              "uuid": "2572286d-6442-4f1e-aa2f-e766abec9303",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter no campo password envia o formulário",
              "fullTitle": "Login (DOM atual) Enter no campo password envia o formulário",
              "timedOut": null,
              "duration": 1006,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'fake-access-token',\n    refresh: 'fake-refresh-token'\n  }\n}).as('loginOkEnter');\ncy.get('form.login-form input[name=\"username\"]').clear().type('admin@example.com');\ncy.get('form.login-form input[name=\"password\"]').clear().type('Pass12345!{enter}');\ncy.wait('@loginOkEnter');",
              "err": {},
              "uuid": "05c24d48-3759-4958-8475-743095228c76",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "payload correto: contém username e password",
              "fullTitle": "Login (DOM atual) payload correto: contém username e password",
              "timedOut": null,
              "duration": 1452,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  expect(req.method).to.eq('POST');\n  expect(req.body).to.have.property('username', 'admin@example.com');\n  expect(req.body).to.have.property('password');\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'fake-access-token',\n      refresh: 'fake-refresh-token'\n    }\n  });\n}).as('loginPayload');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginPayload');",
              "err": {},
              "uuid": "e4ccad19-2f5b-480a-88e3-d967046d0295",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "URL do endpoint confere",
              "fullTitle": "Login (DOM atual) URL do endpoint confere",
              "timedOut": null,
              "duration": 1525,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  expect(req.url).to.match(/\\/api\\/users\\/login\\/?/);\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'fake-access-token',\n      refresh: 'fake-refresh-token'\n    }\n  });\n}).as('loginUrl');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginUrl');",
              "err": {},
              "uuid": "992a66c0-58a0-4939-9eec-3d82858ed409",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username com espaços: tolerante (ignora espaços ao comparar)",
              "fullTitle": "Login (DOM atual) username com espaços: tolerante (ignora espaços ao comparar)",
              "timedOut": null,
              "duration": 1585,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  var _req$body;\n  const u = String(((_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.username) || '');\n  expect(u.replace(/\\s/g, '')).to.eq('admin@example.com');\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'fake-access-token',\n      refresh: 'fake-refresh-token'\n    }\n  });\n}).as('loginTrimTol');\ntypeLogin('  admin@example.com  ', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginTrimTol');",
              "err": {},
              "uuid": "5ed614ff-bc7e-4dcf-967a-abded6504f2e",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "401 com mensagem PT/EN ainda dispara alert",
              "fullTitle": "Login (DOM atual) 401 com mensagem PT/EN ainda dispara alert",
              "timedOut": null,
              "duration": 1386,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Credenciais inválidas'\n  }\n}).as('pt401');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@pt401');\ncy.get('@alert').should('have.been.called');",
              "err": {},
              "uuid": "491a8bc3-4a93-4a20-935e-e8f9a273f696",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Network error (sem status) mostra alert e permanece",
              "fullTitle": "Login (DOM atual) Network error (sem status) mostra alert e permanece",
              "timedOut": null,
              "duration": 1759,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  forceNetworkError: true\n}).as('netErr');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@netErr');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "cf52fc36-880a-44fa-97b8-7d04b1e6a5a2",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "após sucesso, algum item do localStorage contém o token de acesso",
              "fullTitle": "Login (DOM atual) após sucesso, algum item do localStorage contém o token de acesso",
              "timedOut": null,
              "duration": 1396,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'fake-access-token',\n    refresh: 'fake-refresh-token'\n  }\n}).as('loginOkLS');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginOkLS');\ncy.window().then(win => {\n  const hasAccessToken = Object.keys(win.localStorage).some(k => win.localStorage.getItem(k) === 'fake-access-token');\n  expect(hasAccessToken).to.eq(true);\n});",
              "err": {},
              "uuid": "08e4ad37-bd60-47ef-80a1-f5d079833a4b",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e6c6e1fa-acdd-456c-ade8-98a5143898f4",
            "75be58b0-cad3-4585-92b8-0516af0d1d59",
            "5db507d1-2665-4548-b72e-458e0365ac95",
            "fb4d97ed-a724-4025-9f57-c1fccab11142",
            "b3d64d04-4e5e-4ffb-b68b-ae527aa928bf",
            "efb02a97-96b0-4e40-9d7e-562dfb496b16",
            "0c7998ad-57b6-490e-9106-6d69c01e1502",
            "176fcf23-6502-4f00-b4b6-542db5a8a900",
            "2572286d-6442-4f1e-aa2f-e766abec9303",
            "05c24d48-3759-4958-8475-743095228c76",
            "e4ccad19-2f5b-480a-88e3-d967046d0295",
            "992a66c0-58a0-4939-9eec-3d82858ed409",
            "5ed614ff-bc7e-4dcf-967a-abded6504f2e",
            "491a8bc3-4a93-4a20-935e-e8f9a273f696",
            "cf52fc36-880a-44fa-97b8-7d04b1e6a5a2",
            "08e4ad37-bd60-47ef-80a1-f5d079833a4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17450,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1d694f29-7cc2-48d7-8176-3d18207890d2",
          "title": "Login (falhos de propósito)",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "exige toast no DOM ao invés de alert (vai falhar)",
              "fullTitle": "Login (falhos de propósito) exige toast no DOM ao invés de alert (vai falhar)",
              "timedOut": null,
              "duration": 5537,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Invalid credentials'\n  }\n}).as('fail');\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@fail');\ncy.get('[role=\"alert\"], .toast-error, .alert-danger').should('contain.text', 'Invalid credentials');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:251:58)",
                "diff": null
              },
              "uuid": "57664d48-d6ce-49da-bda6-082de141782d",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "redireciona exatamente para /dashboard (vai falhar)",
              "fullTitle": "Login (falhos de propósito) redireciona exatamente para /dashboard (vai falhar)",
              "timedOut": null,
              "duration": 5193,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'a',\n    refresh: 'r'\n  }\n}).as('ok');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@ok');\ncy.location('pathname').should('eq', '/dashboard');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '/' to equal '/dashboard'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '/' to equal '/dashboard'\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:264:28)",
                "diff": "- '/'\n+ '/dashboard'\n"
              },
              "uuid": "2add0ee0-4663-4155-a924-7e6d02e725f1",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "salva tokens com chaves jwt_access/jwt_refresh (vai falhar)",
              "fullTitle": "Login (falhos de propósito) salva tokens com chaves jwt_access/jwt_refresh (vai falhar)",
              "timedOut": null,
              "duration": 1165,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'a',\n    refresh: 'r'\n  }\n}).as('ok');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@ok');\ncy.window().then(win => {\n  expect(win.localStorage.getItem('jwt_access')).to.be.a('string');\n  expect(win.localStorage.getItem('jwt_refresh')).to.be.a('string');\n});",
              "err": {
                "message": "AssertionError: expected null to be a string",
                "estack": "AssertionError: expected null to be a string\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:278:60)\n    at getRet (http://localhost:3000/__cypress/runner/cypress_runner.js:122243:20)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:3000/__cypress/runner/cypress_runner.js:122254:66)\n    at Context.then (http://localhost:3000/__cypress/runner/cypress_runner.js:122505:21)",
                "diff": null
              },
              "uuid": "6b36fec7-fc78-439f-a4ba-6dec3a176fd1",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "bloqueia duplo clique: exatamente 1 request (vai falhar)",
              "fullTitle": "Login (falhos de propósito) bloqueia duplo clique: exatamente 1 request (vai falhar)",
              "timedOut": null,
              "duration": 1181,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let hits = 0;\ncy.intercept('POST', LOGIN_URL, req => {\n  hits += 1;\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'a',\n      refresh: 'r'\n    }\n  });\n}).as('ok');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click().click();\ncy.wait('@ok');\ncy.wrap(null).should(() => expect(hits).to.eq(1));",
              "err": {
                "message": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                "estack": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at isAttached (http://localhost:3000/__cypress/runner/cypress_runner.js:152448:58)\n    at validateType (http://localhost:3000/__cypress/runner/cypress_runner.js:152318:9)\n    at Object.isType (http://localhost:3000/__cypress/runner/cypress_runner.js:152353:7)\n    at $Cy.pushSubject (http://localhost:3000/__cypress/runner/cypress_runner.js:146022:22)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:145576:19)\nFrom Your Spec Code:\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:291:72)",
                "diff": null
              },
              "uuid": "0f8f55e1-af03-48d1-a016-09d5a3b5762f",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "trim estrito no username (vai falhar se não trimar)",
              "fullTitle": "Login (falhos de propósito) trim estrito no username (vai falhar se não trimar)",
              "timedOut": null,
              "duration": 1196,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  var _req$body2;\n  expect((_req$body2 = req.body) === null || _req$body2 === void 0 ? void 0 : _req$body2.username).to.eq('admin@example.com');\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'a',\n      refresh: 'r'\n    }\n  });\n}).as('ok');\ntypeLogin('  admin@example.com  ', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@ok');",
              "err": {
                "message": "AssertionError: expected '  admin@example.com  ' to equal 'admin@example.com'",
                "estack": "AssertionError: expected '  admin@example.com  ' to equal 'admin@example.com'\n    at eval (webpack://frontend/./cypress/e2e/Login.cy.js:299:36)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:144517:12)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at onBeforeRequest (http://localhost:3000/__cypress/runner/cypress_runner.js:144516:64)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:144194:28)",
                "diff": "- '  admin@example.com  '\n+ 'admin@example.com'\n"
              },
              "uuid": "2a275d5d-24cd-4a1d-aec0-7e240a6e072a",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "password visível por padrão (vai falhar)",
              "fullTitle": "Login (falhos de propósito) password visível por padrão (vai falhar)",
              "timedOut": null,
              "duration": 4315,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('form.login-form input[name=\"password\"]').should('have.attr', 'type', 'text');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<input.form-input>' to have attribute 'type' with the value 'text', but the value was 'password'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<input.form-input>' to have attribute 'type' with the value 'text', but the value was 'password'\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:309:53)",
                "diff": "- 'password'\n+ 'text'\n"
              },
              "uuid": "a7fcfdad-115f-4ee0-9413-29f2fe2b72ce",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "mostra contador de tentativas restantes (vai falhar)",
              "fullTitle": "Login (falhos de propósito) mostra contador de tentativas restantes (vai falhar)",
              "timedOut": null,
              "duration": 5411,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Invalid credentials'\n  }\n}).as('fail');\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@fail');\ncy.get('[data-cy=\"attempts-left\"]').should('contain.text', '2 tentativas restantes');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"attempts-left\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"attempts-left\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:319:40)",
                "diff": null
              },
              "uuid": "32112d9a-712d-48f4-bcdc-4e751763b445",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "57664d48-d6ce-49da-bda6-082de141782d",
            "2add0ee0-4663-4155-a924-7e6d02e725f1",
            "6b36fec7-fc78-439f-a4ba-6dec3a176fd1",
            "0f8f55e1-af03-48d1-a016-09d5a3b5762f",
            "2a275d5d-24cd-4a1d-aec0-7e240a6e072a",
            "a7fcfdad-115f-4ee0-9413-29f2fe2b72ce",
            "32112d9a-712d-48f4-bcdc-4e751763b445"
          ],
          "pending": [],
          "skipped": [],
          "duration": 23998,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}