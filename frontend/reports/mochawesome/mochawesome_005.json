{
  "stats": {
    "suites": 2,
    "tests": 19,
    "passes": 12,
    "pending": 0,
    "failures": 7,
    "start": "2025-10-20T23:17:27.465Z",
    "end": "2025-10-20T23:18:32.501Z",
    "duration": 65036,
    "testsRegistered": 19,
    "passPercent": 63.1578947368421,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f711cba4-91a1-44aa-bf4b-189cb67c4183",
      "title": "",
      "fullFile": "cypress\\e2e\\Register.cy.js",
      "file": "cypress\\e2e\\Register.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "33b2f485-f318-4156-9f13-fa77759d5b84",
          "title": "Registro - ok",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renderiza formulario",
              "fullTitle": "Registro - ok renderiza formulario",
              "timedOut": null,
              "duration": 602,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(/give\\.me/i).should('be.visible');\ncy.contains(/crie sua conta|create your account|sign up/i).should('be.visible');\n$first().should('be.visible');\n$last().should('be.visible');\n$email().should('be.visible');\n$password().should('be.visible');\n$submit().should('be.visible');\ncy.contains('a', /sign\\s*in|entrar|login/i).should('exist');",
              "err": {},
              "uuid": "aaef6b93-589f-44cf-8f58-2da0a788fb3d",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sucesso 201 -> vai para login",
              "fullTitle": "Registro - ok sucesso 201 -> vai para login",
              "timedOut": null,
              "duration": 3781,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  headers: {\n    'content-type': 'application/json'\n  },\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('regOk');\nfill();\n$submit().click();\ncy.wait('@regOk').its('request.body').should(body => {\n  expect(body).to.have.property('first_name');\n  expect(body).to.have.property('last_name');\n  expect(body).to.have.property('email');\n  expect(body).to.have.property('password');\n});\ncy.location('pathname', {\n  timeout: 4000\n}).should('match', /login|signin/i);",
              "err": {},
              "uuid": "20891856-43f0-4e99-83d7-9c4a5bc3aa04",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "email ja existe 409 -> alerta e permanece",
              "fullTitle": "Registro - ok email ja existe 409 -> alerta e permanece",
              "timedOut": null,
              "duration": 3916,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 409,\n  body: {\n    detail: 'Email already exists'\n  }\n}).as('reg409');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\nfill();\n$submit().click();\ncy.wait('@reg409');\ncy.get('@alert').should('have.been.called');\ncy.get('@alert').should('have.been.calledWithMatch', /email|existe|exists/i);\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "73a6626d-2449-4c33-98a3-cb68b9bfed50",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validacao 400 -> alerta generico e permanece",
              "fullTitle": "Registro - ok validacao 400 -> alerta generico e permanece",
              "timedOut": null,
              "duration": 5267,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 400,\n  body: {\n    email: ['Formato invalido']\n  }\n}).as('reg400');\n$form().invoke('attr', 'novalidate', 'novalidate');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\nfill({\n  email: 'user@example.com',\n  pass: '123'\n});\n$submit().click();\ncy.wait('@reg400');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "59e0bfff-1a64-47c5-a5a3-10343addf328",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "link para login funciona",
              "fullTitle": "Registro - ok link para login funciona",
              "timedOut": null,
              "duration": 4329,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('a', /sign\\s*in|entrar|login/i).click({\n  force: true\n});\ncy.location('pathname').should('match', /login|signin/i);",
              "err": {},
              "uuid": "3cd67f7e-d478-4331-a35a-9d1a9d28f292",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "required bloqueia first name vazio",
              "fullTitle": "Registro - ok required bloqueia first name vazio",
              "timedOut": null,
              "duration": 3362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('Nao deveria chamar API com required vazio');\n}).as('guard');\n$first().clear();\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\n$form().then($f => expect($f[0].checkValidity()).to.eq(false));\n$first().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(200);",
              "err": {},
              "uuid": "b3b54d0a-665d-434a-8e76-20eb7b98994a",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "email invalido bloqueia submit",
              "fullTitle": "Registro - ok email invalido bloqueia submit",
              "timedOut": null,
              "duration": 1762,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('Nao deveria chamar API com email invalido');\n}).as('guard');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('invalid-email');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$email().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "baeb8a9b-d11c-4318-8c1d-6580fac8be71",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "required bloqueia last name vazio",
              "fullTitle": "Registro - ok required bloqueia last name vazio",
              "timedOut": null,
              "duration": 1656,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('Nao deveria chamar API com last vazio');\n}).as('guard');\n$first().clear().type('Ada');\n$last().clear();\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$last().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "bd770015-b85b-4bf8-88e5-b2a6438239d3",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "required bloqueia password vazio",
              "fullTitle": "Registro - ok required bloqueia password vazio",
              "timedOut": null,
              "duration": 1615,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('Nao deveria chamar API com password vazio');\n}).as('guard');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear();\n$submit().click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$password().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "b71466e9-7d32-4287-bb8e-24ce06bb23ee",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endpoint url ok",
              "fullTitle": "Registro - ok endpoint url ok",
              "timedOut": null,
              "duration": 1957,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  expect(req.method).to.eq('POST');\n  expect(req.url).to.match(/\\/api\\/users\\/register\\/?/);\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('regOk2');\nfill();\n$submit().click();\ncy.wait('@regOk2');\ncy.location('pathname', {\n  timeout: 4000\n}).should('match', /login|signin/i);",
              "err": {},
              "uuid": "59edaca6-53c7-4e63-aa33-1661852a1d71",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "payload campos ok",
              "fullTitle": "Registro - ok payload campos ok",
              "timedOut": null,
              "duration": 3033,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  const keys = Object.keys(req.body || {});\n  expect(keys.sort()).to.deep.eq(['email', 'first_name', 'last_name', 'password'].sort());\n}).as('regOk3');\nfill();\n$submit().click();\ncy.wait('@regOk3');",
              "err": {},
              "uuid": "d6165995-fd4a-4c22-a7ec-c33e8b201914",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "erro 500 -> alerta e permanece",
              "fullTitle": "Registro - ok erro 500 -> alerta e permanece",
              "timedOut": null,
              "duration": 1668,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 500,\n  body: {\n    detail: 'Server error'\n  }\n}).as('reg500');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\nfill();\n$submit().click();\ncy.wait('@reg500');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "d2640170-cc89-4f3b-b402-93ebf470792e",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aaef6b93-589f-44cf-8f58-2da0a788fb3d",
            "20891856-43f0-4e99-83d7-9c4a5bc3aa04",
            "73a6626d-2449-4c33-98a3-cb68b9bfed50",
            "59e0bfff-1a64-47c5-a5a3-10343addf328",
            "3cd67f7e-d478-4331-a35a-9d1a9d28f292",
            "b3b54d0a-665d-434a-8e76-20eb7b98994a",
            "baeb8a9b-d11c-4318-8c1d-6580fac8be71",
            "bd770015-b85b-4bf8-88e5-b2a6438239d3",
            "b71466e9-7d32-4287-bb8e-24ce06bb23ee",
            "59edaca6-53c7-4e63-aa33-1661852a1d71",
            "d6165995-fd4a-4c22-a7ec-c33e8b201914",
            "d2640170-cc89-4f3b-b402-93ebf470792e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32948,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bd693d8e-ccac-495d-887a-37b403b817c7",
          "title": "Registro - falha proposital",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "espera toast no 409 (falha)",
              "fullTitle": "Registro - falha proposital espera toast no 409 (falha)",
              "timedOut": null,
              "duration": 5730,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 409,\n  body: {\n    detail: 'Email already exists'\n  }\n}).as('reg409');\nfill();\n$submit().click();\ncy.wait('@reg409');\ncy.get('[role=\"alert\"], .toast-error, .alert-danger').should('contain.text', /email/i);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:211:58)",
                "diff": null
              },
              "uuid": "7c7497da-6690-436e-8325-8522e759a77d",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "espera /dashboard apos sucesso (falha)",
              "fullTitle": "Registro - falha proposital espera /dashboard apos sucesso (falha)",
              "timedOut": null,
              "duration": 5766,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('ok');\nfill();\n$submit().click();\ncy.wait('@ok');\ncy.location('pathname').should('eq', '/dashboard');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '/login' to equal '/dashboard'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '/login' to equal '/dashboard'\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:219:28)",
                "diff": "- '/login'\n+ '/dashboard'\n"
              },
              "uuid": "9e106df9-35db-42ba-b1e7-d0a04dc13274",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "duplo clique -> 1 request (falha)",
              "fullTitle": "Registro - falha proposital duplo clique -> 1 request (falha)",
              "timedOut": null,
              "duration": 1775,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let hits = 0;\ncy.intercept('POST', REGISTER_GLOB, req => {\n  hits += 1;\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('ok');\nfill();\n$submit().click().click();\ncy.wait('@ok');\ncy.wrap(null).should(() => expect(hits).to.eq(1));",
              "err": {
                "message": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                "estack": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at isAttached (http://localhost:3000/__cypress/runner/cypress_runner.js:152448:58)\n    at validateType (http://localhost:3000/__cypress/runner/cypress_runner.js:152318:9)\n    at Object.isType (http://localhost:3000/__cypress/runner/cypress_runner.js:152353:7)\n    at $Cy.pushSubject (http://localhost:3000/__cypress/runner/cypress_runner.js:146022:22)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:145576:19)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:151524:15)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (http://localhost:3000/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "35917d12-0511-4d92-9525-7fcf1051a37e",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "campo confirm deve existir (falha)",
              "fullTitle": "Registro - falha proposital campo confirm deve existir (falha)",
              "timedOut": null,
              "duration": 4229,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]').should('exist');\nfill();\n$submit().click();\ncy.contains(/confirme|confirm|igual/i).should('exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:232:92)",
                "diff": null
              },
              "uuid": "cb2e58ea-b2be-4de5-8ae7-e7fb43fb5a7f",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "400 deve ter header JSON (falha)",
              "fullTitle": "Registro - falha proposital 400 deve ter header JSON (falha)",
              "timedOut": null,
              "duration": 6640,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  req.reply({\n    statusCode: 400,\n    body: {\n      email: ['Formato invalido']\n    },\n    headers: {}\n  });\n}).as('noCT');\nfill({\n  email: 'invalido'\n});\n$submit().click();\ncy.wait('@noCT');\ncy.get('@noCT').its('response.headers.content-type').should('include', 'application/json');",
              "err": {
                "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `noCT`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `noCT`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://localhost:3000/__cypress/runner/cypress_runner.js:77924:18)\n    at Object.errByPath (http://localhost:3000/__cypress/runner/cypress_runner.js:77992:10)\n    at checkForXhr (http://localhost:3000/__cypress/runner/cypress_runner.js:138183:84)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:138208:28)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:151252:68)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:151193:14)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:5420:46)",
                "diff": null
              },
              "uuid": "e87b1bbc-3274-4ef3-9deb-17debaf5344d",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "salva email no localStorage (falha)",
              "fullTitle": "Registro - falha proposital salva email no localStorage (falha)",
              "timedOut": null,
              "duration": 2086,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('ok');\nfill();\n$submit().click();\ncy.wait('@ok');\ncy.window().then(win => {\n  expect(win.localStorage.getItem('registered_email')).to.eq('user@example.com');\n});",
              "err": {
                "message": "AssertionError: expected null to equal 'user@example.com'",
                "estack": "AssertionError: expected null to equal 'user@example.com'\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:251:88)\n    at getRet (http://localhost:3000/__cypress/runner/cypress_runner.js:122243:20)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:3000/__cypress/runner/cypress_runner.js:122254:66)\n    at Context.then (http://localhost:3000/__cypress/runner/cypress_runner.js:122505:21)",
                "diff": null
              },
              "uuid": "18808c20-c3bd-4740-b706-4c16d438d7cf",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "mostra medidor de senha (falha)",
              "fullTitle": "Registro - falha proposital mostra medidor de senha (falha)",
              "timedOut": null,
              "duration": 4619,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "$password().clear().type('Pass12345!');\ncy.get('[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:256:80)",
                "diff": null
              },
              "uuid": "976b3272-449b-49fe-861b-8ae543608efa",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7c7497da-6690-436e-8325-8522e759a77d",
            "9e106df9-35db-42ba-b1e7-d0a04dc13274",
            "35917d12-0511-4d92-9525-7fcf1051a37e",
            "cb2e58ea-b2be-4de5-8ae7-e7fb43fb5a7f",
            "e87b1bbc-3274-4ef3-9deb-17debaf5344d",
            "18808c20-c3bd-4740-b706-4c16d438d7cf",
            "976b3272-449b-49fe-861b-8ae543608efa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 30845,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}