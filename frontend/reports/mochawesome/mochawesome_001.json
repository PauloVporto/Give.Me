{
  "stats": {
    "suites": 2,
    "tests": 21,
    "passes": 13,
    "pending": 0,
    "failures": 8,
    "start": "2025-10-20T22:47:11.434Z",
    "end": "2025-10-20T22:48:07.790Z",
    "duration": 56356,
    "testsRegistered": 21,
    "passPercent": 61.904761904761905,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "408ad483-778d-4955-8da2-83ad2ceddd40",
      "title": "",
      "fullFile": "cypress\\e2e\\Register.cy.js",
      "file": "cypress\\e2e\\Register.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
          "title": "Registro — básico estável",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renderiza campos, botão e link para login",
              "fullTitle": "Registro — básico estável renderiza campos, botão e link para login",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(/give\\.me/i).should('be.visible');\ncy.contains(/crie sua conta|create your account|sign up/i).should('be.visible');\n$first().should('be.visible');\n$last().should('be.visible');\n$email().should('be.visible');\n$password().should('be.visible');\n$submit().should('be.visible');\ncy.contains('a', /sign\\s*in|entrar|login/i).should('exist');",
              "err": {},
              "uuid": "a9cee13c-2523-4e57-b7ee-2d13d632d8eb",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sucesso (201) → envia os 4 campos e redireciona para /login",
              "fullTitle": "Registro — básico estável sucesso (201) → envia os 4 campos e redireciona para /login",
              "timedOut": null,
              "duration": 1728,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  headers: {\n    'content-type': 'application/json'\n  },\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('regOk');\nfill();\n$submit().click();\ncy.wait('@regOk').its('request.body').should(body => {\n  expect(body).to.have.property('first_name');\n  expect(body).to.have.property('last_name');\n  expect(body).to.have.property('email');\n  expect(body).to.have.property('password');\n});\ncy.location('pathname', {\n  timeout: 4000\n}).should('match', /login|signin/i);",
              "err": {},
              "uuid": "6db6ec80-5f73-48ac-966a-35b6bfba6fa6",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "409 (email já existe) → alerta e permanece na página",
              "fullTitle": "Registro — básico estável 409 (email já existe) → alerta e permanece na página",
              "timedOut": null,
              "duration": 1669,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 409,\n  body: {\n    detail: 'Email already exists'\n  }\n}).as('reg409');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\nfill();\n$submit().click();\ncy.wait('@reg409');\ncy.get('@alert').should('have.been.called');\ncy.get('@alert').should('have.been.calledWithMatch', /email|existe|exists/i);\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "540ed74e-a13e-48bb-b8c6-ac2760ae915d",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "400 (validação) → alerta genérico e permanece (sem bloquear pelo HTML5)",
              "fullTitle": "Registro — básico estável 400 (validação) → alerta genérico e permanece (sem bloquear pelo HTML5)",
              "timedOut": null,
              "duration": 1598,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 400,\n  body: {\n    email: ['Formato inválido']\n  }\n}).as('reg400');\n// Desliga a validação nativa do navegador para este submit\n$form().invoke('attr', 'novalidate', 'novalidate');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\n// usa um email \"válido\" pra não acionar HTML5; quem retorna 400 é o backend simulado\nfill({\n  email: 'user@example.com',\n  pass: '123'\n});\n$submit().click();\ncy.wait('@reg400');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "37af72a3-2c08-45c2-a405-eebd23ea0925",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "link \"Sign In\" navega para /login",
              "fullTitle": "Registro — básico estável link \"Sign In\" navega para /login",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('a', /sign\\s*in|entrar|login/i).click({\n  force: true\n});\ncy.location('pathname').should('match', /login|signin/i);",
              "err": {},
              "uuid": "eb60d984-3426-4982-9085-283f55dfd4fa",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "bloqueia submit com HTML5 \"required\" quando First Name está vazio",
              "fullTitle": "Registro — básico estável bloqueia submit com HTML5 \"required\" quando First Name está vazio",
              "timedOut": null,
              "duration": 1788,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Guarda de segurança: nenhuma chamada deve acontecer\ncy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('Não deveria chamar a API com campos required vazios');\n}).as('guard');\n// deixa o first_name vazio; preenche o restante\n$first().clear(); // vazio\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n// tenta enviar\n$submit().click();\n// formulário inválido\n$form().then($f => {\n  expect($f[0].checkValidity()).to.eq(false);\n});\n// campo específico inválido + mensagem nativa\n$first().then($i => {\n  const el = $i[0];\n  expect(el.checkValidity()).to.eq(false);\n  expect(el.validationMessage).to.match(/preencha|campo|fill|field/i);\n});\n// continua na mesma rota\ncy.location('pathname').should('match', /register|signup/i);\n// pequena espera para garantir que nada escapou\ncy.wait(200);",
              "err": {},
              "uuid": "69cdbadc-d1ba-4f75-8277-20383b23d8f9",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "inputs possuem atributo required e password é type=\"password\"",
              "fullTitle": "Registro — básico estável inputs possuem atributo required e password é type=\"password\"",
              "timedOut": null,
              "duration": 4253,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "$first().should('have.attr', 'required');\n$last().should('have.attr', 'required');\n$email().should('have.attr', 'required').and('have.attr', 'type', 'email');\n$password().should('have.attr', 'required').and('have.attr', 'type', 'password');",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: You attempted to make a chai-jQuery assertion on an object that is neither a DOM object or a jQuery object.\n\nThe chai-jQuery assertion you used was:\n\n  > attr\n\nThe invalid subject you asserted on was:\n\n  > required\n\nTo use chai-jQuery assertions your subject must be valid.\n\nThis can sometimes happen if a previous assertion changed the subject.",
                "estack": "CypressError: Timed out retrying after 4000ms: You attempted to make a chai-jQuery assertion on an object that is neither a DOM object or a jQuery object.\n\nThe chai-jQuery assertion you used was:\n\n  > attr\n\nThe invalid subject you asserted on was:\n\n  > required\n\nTo use chai-jQuery assertions your subject must be valid.\n\nThis can sometimes happen if a previous assertion changed the subject.\n    at Object.onInvalid (http://localhost:3000/__cypress/runner/cypress_runner.js:146257:68)\n    at assertDom (http://localhost:3000/__cypress/runner/cypress_runner.js:146932:26)\n    at Proxy.<anonymous> (http://localhost:3000/__cypress/runner/cypress_runner.js:147037:7)\n    at Proxy.methodWrapper (http://localhost:3000/__cypress/runner/cypress_runner.js:80530:25)\n    at applyChainer (http://localhost:3000/__cypress/runner/cypress_runner.js:121749:26)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:121802:16)\n    at arrayReduce (http://localhost:3000/__cypress/runner/cypress_runner.js:18675:21)\n    at lodash.reduce (http://localhost:3000/__cypress/runner/cypress_runner.js:27727:14)\n    at applyChainers (http://localhost:3000/__cypress/runner/cypress_runner.js:121780:68)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.shouldFn (http://localhost:3000/__cypress/runner/cypress_runner.js:121806:66)\n    at Context.and (http://localhost:3000/__cypress/runner/cypress_runner.js:121828:23)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:150511:39)\n    at assertions (http://localhost:3000/__cypress/runner/cypress_runner.js:150759:16)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Object.gotValue (http://localhost:3000/__cypress/runner/cypress_runner.js:6448:18)\n    at Object.gotAccum (http://localhost:3000/__cypress/runner/cypress_runner.js:6435:25)\n    at Object.tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\nFrom Your Spec Code:\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:147:45)",
                "diff": null
              },
              "uuid": "9aa6c796-bcfd-4982-8d25-13dedad96763",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não envia quando Email é inválido (HTML5) — nenhum POST ocorre",
              "fullTitle": "Registro — básico estável não envia quando Email é inválido (HTML5) — nenhum POST ocorre",
              "timedOut": null,
              "duration": 1808,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// guarda: nenhuma request deve sair\ncy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('Não deveria chamar a API com email inválido pelo HTML5');\n}).as('guard');\n// Preenche com email inválido (sem @)\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('invalid-email');\n$password().clear().type('Pass12345!');\n$submit().click();\n// form e campo email inválidos\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$email().then($i => {\n  const el = $i[0];\n  expect(el.checkValidity()).to.eq(false);\n  // mensagem varia por idioma/navegador; só checamos palavras comuns\n  expect(el.validationMessage).to.match(/email|@|válido|valid/i);\n});\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "a8af6110-3d5e-41a2-8c2d-ebcd977af3bd",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não envia quando Last Name está vazio (HTML5 required)",
              "fullTitle": "Registro — básico estável não envia quando Last Name está vazio (HTML5 required)",
              "timedOut": null,
              "duration": 1650,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('Não deveria chamar a API com last_name vazio');\n}).as('guard');\n$first().clear().type('Ada');\n$last().clear(); // vazio\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$last().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "d74b3084-50f8-4e47-be0f-3d5018493d2b",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não envia quando Password está vazio (HTML5 required)",
              "fullTitle": "Registro — básico estável não envia quando Password está vazio (HTML5 required)",
              "timedOut": null,
              "duration": 1679,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('Não deveria chamar a API com password vazio');\n}).as('guard');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear(); // vazio\n$submit().click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$password().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "37a65e3d-adde-4455-9289-96a8119df829",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sucesso (201) — URL da request bate no endpoint de registro",
              "fullTitle": "Registro — básico estável sucesso (201) — URL da request bate no endpoint de registro",
              "timedOut": null,
              "duration": 1961,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  expect(req.method).to.eq('POST');\n  expect(req.url).to.match(/\\/api\\/users\\/register\\/?/); // aceita com/sem barra final\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('regOk2');\nfill();\n$submit().click();\ncy.wait('@regOk2');\ncy.location('pathname', {\n  timeout: 4000\n}).should('match', /login|signin/i);",
              "err": {},
              "uuid": "856f0a9d-19c9-4930-b86f-307c193248fa",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sucesso (201) — payload não contém campos inesperados",
              "fullTitle": "Registro — básico estável sucesso (201) — payload não contém campos inesperados",
              "timedOut": null,
              "duration": 1658,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  const keys = Object.keys(req.body || {});\n  // Deve conter exatamente estes 4 campos (ordem não importa)\n  expect(keys.sort()).to.deep.eq(['email', 'first_name', 'last_name', 'password'].sort());\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('regOk3');\nfill();\n$submit().click();\ncy.wait('@regOk3');",
              "err": {},
              "uuid": "3e4478c3-3728-4e60-be46-93771245272c",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "500 (erro de servidor) — mostra alert amigável e permanece",
              "fullTitle": "Registro — básico estável 500 (erro de servidor) — mostra alert amigável e permanece",
              "timedOut": null,
              "duration": 1719,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 500,\n  body: {\n    detail: 'Server error'\n  }\n}).as('reg500simple');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\nfill();\n$submit().click();\ncy.wait('@reg500simple');\ncy.get('@alert').should('have.been.called'); // não prendemos a regex de texto\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "e161e9a2-ed45-47a7-944c-f1e497fd8aa2",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
              "title": "Registro — falhos de propósito",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "mostra toast no DOM em vez de alert no 409 (vai falhar)",
                  "fullTitle": "Registro — básico estável Registro — falhos de propósito mostra toast no DOM em vez de alert no 409 (vai falhar)",
                  "timedOut": null,
                  "duration": 5902,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 409,\n  body: {\n    detail: 'Email already exists'\n  }\n}).as('reg409');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@reg409');\n// o app usa window.alert; aqui exigimos um toast/alert DOM -> FALHA\ncy.get('[role=\"alert\"], .toast-error, .alert-danger').should('contain.text', /email/i);",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:281:58)",
                    "diff": null
                  },
                  "uuid": "0e476c75-80d4-437a-9e9d-62722aef7d1e",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "redireciona exatamente para /dashboard após sucesso (vai falhar)",
                  "fullTitle": "Registro — básico estável Registro — falhos de propósito redireciona exatamente para /dashboard após sucesso (vai falhar)",
                  "timedOut": null,
                  "duration": 5851,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('ok');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@ok');\n// teu app redireciona para /login; aqui exigimos /dashboard -> FALHA\ncy.location('pathname').should('eq', '/dashboard');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '/login' to equal '/dashboard'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '/login' to equal '/dashboard'\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:299:28)",
                    "diff": "- '/login'\n+ '/dashboard'\n"
                  },
                  "uuid": "ab652125-951e-4e29-9b1a-5b5e803afc13",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "trim estrito do email (vai falhar se o payload vier com espaços)",
                  "fullTitle": "Registro — básico estável Registro — falhos de propósito trim estrito do email (vai falhar se o payload vier com espaços)",
                  "timedOut": null,
                  "duration": 1809,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  var _req$body;\n  // exige e-mail sem espaços no payload -> FALHA se o front não trimar antes de enviar\n  expect((_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.email).to.eq('user@example.com');\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('strictTrim');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('  user@example.com  ');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@strictTrim');",
                  "err": {},
                  "uuid": "2b70f66c-0727-4a4d-8b8e-3ed3e25f0969",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "duplo clique bloqueado: exatamente 1 request (vai falhar)",
                  "fullTitle": "Registro — básico estável Registro — falhos de propósito duplo clique bloqueado: exatamente 1 request (vai falhar)",
                  "timedOut": null,
                  "duration": 1873,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let hits = 0;\ncy.intercept('POST', REGISTER_GLOB, req => {\n  hits += 1;\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('ok');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click().click(); // spam proposital\ncy.wait('@ok');\n// exige 1 request exatamente -> usualmente >1 -> FALHA\ncy.wrap(null).should(() => expect(hits).to.eq(1));",
                  "err": {
                    "message": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                    "estack": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at isAttached (http://localhost:3000/__cypress/runner/cypress_runner.js:152448:58)\n    at validateType (http://localhost:3000/__cypress/runner/cypress_runner.js:152318:9)\n    at Object.isType (http://localhost:3000/__cypress/runner/cypress_runner.js:152353:7)\n    at $Cy.pushSubject (http://localhost:3000/__cypress/runner/cypress_runner.js:146022:22)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:145576:19)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:151524:15)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (http://localhost:3000/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)",
                    "diff": null
                  },
                  "uuid": "47a384cd-ff73-46a1-871e-09431ca9c0da",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "campo \"confirm\" deve existir e ser obrigatório (vai falhar)",
                  "fullTitle": "Registro — básico estável Registro — falhos de propósito campo \"confirm\" deve existir e ser obrigatório (vai falhar)",
                  "timedOut": null,
                  "duration": 4389,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// teu formulário não tem \"confirm\" -> FALHA\ncy.get('input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]').should('exist');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.contains(/confirme|confirm|igual/i).should('exist');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:339:92)",
                    "diff": null
                  },
                  "uuid": "d6dc715d-e85e-4981-88c2-83ca86caec8c",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "erro 400 deve ter header Content-Type JSON (vai falhar)",
                  "fullTitle": "Registro — básico estável Registro — falhos de propósito erro 400 deve ter header Content-Type JSON (vai falhar)",
                  "timedOut": null,
                  "duration": 6746,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  // responde SEM content-type propositalmente\n  req.reply({\n    statusCode: 400,\n    body: {\n      email: ['Formato inválido']\n    },\n    headers: {}\n  });\n}).as('noCT');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('invalido');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@noCT');\n// exige presence do header que NÃO foi enviado -> FALHA\ncy.get('@noCT').its('response.headers.content-type').should('include', 'application/json');",
                  "err": {
                    "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `noCT`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                    "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `noCT`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://localhost:3000/__cypress/runner/cypress_runner.js:77924:18)\n    at Object.errByPath (http://localhost:3000/__cypress/runner/cypress_runner.js:77992:10)\n    at checkForXhr (http://localhost:3000/__cypress/runner/cypress_runner.js:138183:84)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:138208:28)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:151252:68)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:151193:14)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:5420:46)",
                    "diff": null
                  },
                  "uuid": "eced411d-c28a-4a3b-ab84-be3fa5f23ac4",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "salva email registrado no localStorage (vai falhar)",
                  "fullTitle": "Registro — básico estável Registro — falhos de propósito salva email registrado no localStorage (vai falhar)",
                  "timedOut": null,
                  "duration": 2314,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('ok');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@ok');\n// teu app não grava isso -> FALHA\ncy.window().then(win => {\n  expect(win.localStorage.getItem('registered_email')).to.eq('user@example.com');\n});",
                  "err": {
                    "message": "AssertionError: expected null to equal 'user@example.com'",
                    "estack": "AssertionError: expected null to equal 'user@example.com'\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:384:62)\n    at getRet (http://localhost:3000/__cypress/runner/cypress_runner.js:122243:20)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:3000/__cypress/runner/cypress_runner.js:122254:66)\n    at Context.then (http://localhost:3000/__cypress/runner/cypress_runner.js:122505:21)",
                    "diff": null
                  },
                  "uuid": "9074d70d-d5b2-450c-888b-d5712810dc97",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "mostra medidor de força de senha (vai falhar)",
                  "fullTitle": "Registro — básico estável Registro — falhos de propósito mostra medidor de força de senha (vai falhar)",
                  "timedOut": null,
                  "duration": 4737,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "$password().clear().type('Pass12345!');\n// teu app não tem este elemento -> FALHA\ncy.get('[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]').should('be.visible');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:391:80)",
                    "diff": null
                  },
                  "uuid": "af304b78-e324-44fc-afb8-681e299af230",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b70f66c-0727-4a4d-8b8e-3ed3e25f0969"
              ],
              "failures": [
                "0e476c75-80d4-437a-9e9d-62722aef7d1e",
                "ab652125-951e-4e29-9b1a-5b5e803afc13",
                "47a384cd-ff73-46a1-871e-09431ca9c0da",
                "d6dc715d-e85e-4981-88c2-83ca86caec8c",
                "eced411d-c28a-4a3b-ab84-be3fa5f23ac4",
                "9074d70d-d5b2-450c-888b-d5712810dc97",
                "af304b78-e324-44fc-afb8-681e299af230"
              ],
              "pending": [],
              "skipped": [],
              "duration": 33621,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "a9cee13c-2523-4e57-b7ee-2d13d632d8eb",
            "6db6ec80-5f73-48ac-966a-35b6bfba6fa6",
            "540ed74e-a13e-48bb-b8c6-ac2760ae915d",
            "37af72a3-2c08-45c2-a405-eebd23ea0925",
            "eb60d984-3426-4982-9085-283f55dfd4fa",
            "69cdbadc-d1ba-4f75-8277-20383b23d8f9",
            "a8af6110-3d5e-41a2-8c2d-ebcd977af3bd",
            "d74b3084-50f8-4e47-be0f-3d5018493d2b",
            "37a65e3d-adde-4455-9289-96a8119df829",
            "856f0a9d-19c9-4930-b86f-307c193248fa",
            "3e4478c3-3728-4e60-be46-93771245272c",
            "e161e9a2-ed45-47a7-944c-f1e497fd8aa2"
          ],
          "failures": [
            "9aa6c796-bcfd-4982-8d25-13dedad96763"
          ],
          "pending": [],
          "skipped": [],
          "duration": 22113,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}