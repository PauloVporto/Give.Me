{
  "stats": {
    "suites": 6,
    "tests": 130,
    "passes": 86,
    "pending": 0,
    "failures": 44,
    "testsRegistered": 130,
    "passPercent": 66.15384615384616,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-10-20T22:46:26.242Z",
    "end": "2025-10-20T23:18:32.501Z",
    "duration": 1926259
  },
  "results": [
    {
      "uuid": "408ad483-778d-4955-8da2-83ad2ceddd40",
      "title": "",
      "fullFile": "cypress\\e2e\\Register.cy.js",
      "file": "cypress\\e2e\\Register.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
          "title": "Registro ??? b??sico est??vel",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renderiza campos, bot??o e link para login",
              "fullTitle": "Registro ??? b??sico est??vel renderiza campos, bot??o e link para login",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(/give\\.me/i).should('be.visible');\ncy.contains(/crie sua conta|create your account|sign up/i).should('be.visible');\n$first().should('be.visible');\n$last().should('be.visible');\n$email().should('be.visible');\n$password().should('be.visible');\n$submit().should('be.visible');\ncy.contains('a', /sign\\s*in|entrar|login/i).should('exist');",
              "err": {},
              "uuid": "a9cee13c-2523-4e57-b7ee-2d13d632d8eb",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sucesso (201) ??? envia os 4 campos e redireciona para /login",
              "fullTitle": "Registro ??? b??sico est??vel sucesso (201) ??? envia os 4 campos e redireciona para /login",
              "timedOut": null,
              "duration": 1728,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  headers: {\n    'content-type': 'application/json'\n  },\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('regOk');\nfill();\n$submit().click();\ncy.wait('@regOk').its('request.body').should(body => {\n  expect(body).to.have.property('first_name');\n  expect(body).to.have.property('last_name');\n  expect(body).to.have.property('email');\n  expect(body).to.have.property('password');\n});\ncy.location('pathname', {\n  timeout: 4000\n}).should('match', /login|signin/i);",
              "err": {},
              "uuid": "6db6ec80-5f73-48ac-966a-35b6bfba6fa6",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "409 (email j?? existe) ??? alerta e permanece na p??gina",
              "fullTitle": "Registro ??? b??sico est??vel 409 (email j?? existe) ??? alerta e permanece na p??gina",
              "timedOut": null,
              "duration": 1669,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 409,\n  body: {\n    detail: 'Email already exists'\n  }\n}).as('reg409');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\nfill();\n$submit().click();\ncy.wait('@reg409');\ncy.get('@alert').should('have.been.called');\ncy.get('@alert').should('have.been.calledWithMatch', /email|existe|exists/i);\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "540ed74e-a13e-48bb-b8c6-ac2760ae915d",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "400 (valida????o) ??? alerta gen??rico e permanece (sem bloquear pelo HTML5)",
              "fullTitle": "Registro ??? b??sico est??vel 400 (valida????o) ??? alerta gen??rico e permanece (sem bloquear pelo HTML5)",
              "timedOut": null,
              "duration": 1598,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 400,\n  body: {\n    email: ['Formato inv??lido']\n  }\n}).as('reg400');\n// Desliga a valida????o nativa do navegador para este submit\n$form().invoke('attr', 'novalidate', 'novalidate');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\n// usa um email \"v??lido\" pra n??o acionar HTML5; quem retorna 400 ?? o backend simulado\nfill({\n  email: 'user@example.com',\n  pass: '123'\n});\n$submit().click();\ncy.wait('@reg400');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "37af72a3-2c08-45c2-a405-eebd23ea0925",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "link \"Sign In\" navega para /login",
              "fullTitle": "Registro ??? b??sico est??vel link \"Sign In\" navega para /login",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('a', /sign\\s*in|entrar|login/i).click({\n  force: true\n});\ncy.location('pathname').should('match', /login|signin/i);",
              "err": {},
              "uuid": "eb60d984-3426-4982-9085-283f55dfd4fa",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "bloqueia submit com HTML5 \"required\" quando First Name est?? vazio",
              "fullTitle": "Registro ??? b??sico est??vel bloqueia submit com HTML5 \"required\" quando First Name est?? vazio",
              "timedOut": null,
              "duration": 1788,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Guarda de seguran??a: nenhuma chamada deve acontecer\ncy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('N??o deveria chamar a API com campos required vazios');\n}).as('guard');\n// deixa o first_name vazio; preenche o restante\n$first().clear(); // vazio\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n// tenta enviar\n$submit().click();\n// formul??rio inv??lido\n$form().then($f => {\n  expect($f[0].checkValidity()).to.eq(false);\n});\n// campo espec??fico inv??lido + mensagem nativa\n$first().then($i => {\n  const el = $i[0];\n  expect(el.checkValidity()).to.eq(false);\n  expect(el.validationMessage).to.match(/preencha|campo|fill|field/i);\n});\n// continua na mesma rota\ncy.location('pathname').should('match', /register|signup/i);\n// pequena espera para garantir que nada escapou\ncy.wait(200);",
              "err": {},
              "uuid": "69cdbadc-d1ba-4f75-8277-20383b23d8f9",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "inputs possuem atributo required e password ?? type=\"password\"",
              "fullTitle": "Registro ??? b??sico est??vel inputs possuem atributo required e password ?? type=\"password\"",
              "timedOut": null,
              "duration": 4253,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "$first().should('have.attr', 'required');\n$last().should('have.attr', 'required');\n$email().should('have.attr', 'required').and('have.attr', 'type', 'email');\n$password().should('have.attr', 'required').and('have.attr', 'type', 'password');",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: You attempted to make a chai-jQuery assertion on an object that is neither a DOM object or a jQuery object.\n\nThe chai-jQuery assertion you used was:\n\n  > attr\n\nThe invalid subject you asserted on was:\n\n  > required\n\nTo use chai-jQuery assertions your subject must be valid.\n\nThis can sometimes happen if a previous assertion changed the subject.",
                "estack": "CypressError: Timed out retrying after 4000ms: You attempted to make a chai-jQuery assertion on an object that is neither a DOM object or a jQuery object.\n\nThe chai-jQuery assertion you used was:\n\n  > attr\n\nThe invalid subject you asserted on was:\n\n  > required\n\nTo use chai-jQuery assertions your subject must be valid.\n\nThis can sometimes happen if a previous assertion changed the subject.\n    at Object.onInvalid (http://localhost:3000/__cypress/runner/cypress_runner.js:146257:68)\n    at assertDom (http://localhost:3000/__cypress/runner/cypress_runner.js:146932:26)\n    at Proxy.<anonymous> (http://localhost:3000/__cypress/runner/cypress_runner.js:147037:7)\n    at Proxy.methodWrapper (http://localhost:3000/__cypress/runner/cypress_runner.js:80530:25)\n    at applyChainer (http://localhost:3000/__cypress/runner/cypress_runner.js:121749:26)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:121802:16)\n    at arrayReduce (http://localhost:3000/__cypress/runner/cypress_runner.js:18675:21)\n    at lodash.reduce (http://localhost:3000/__cypress/runner/cypress_runner.js:27727:14)\n    at applyChainers (http://localhost:3000/__cypress/runner/cypress_runner.js:121780:68)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.shouldFn (http://localhost:3000/__cypress/runner/cypress_runner.js:121806:66)\n    at Context.and (http://localhost:3000/__cypress/runner/cypress_runner.js:121828:23)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:150511:39)\n    at assertions (http://localhost:3000/__cypress/runner/cypress_runner.js:150759:16)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Object.gotValue (http://localhost:3000/__cypress/runner/cypress_runner.js:6448:18)\n    at Object.gotAccum (http://localhost:3000/__cypress/runner/cypress_runner.js:6435:25)\n    at Object.tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\nFrom Your Spec Code:\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:147:45)",
                "diff": null
              },
              "uuid": "9aa6c796-bcfd-4982-8d25-13dedad96763",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "n??o envia quando Email ?? inv??lido (HTML5) ??? nenhum POST ocorre",
              "fullTitle": "Registro ??? b??sico est??vel n??o envia quando Email ?? inv??lido (HTML5) ??? nenhum POST ocorre",
              "timedOut": null,
              "duration": 1808,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// guarda: nenhuma request deve sair\ncy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('N??o deveria chamar a API com email inv??lido pelo HTML5');\n}).as('guard');\n// Preenche com email inv??lido (sem @)\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('invalid-email');\n$password().clear().type('Pass12345!');\n$submit().click();\n// form e campo email inv??lidos\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$email().then($i => {\n  const el = $i[0];\n  expect(el.checkValidity()).to.eq(false);\n  // mensagem varia por idioma/navegador; s?? checamos palavras comuns\n  expect(el.validationMessage).to.match(/email|@|v??lido|valid/i);\n});\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "a8af6110-3d5e-41a2-8c2d-ebcd977af3bd",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "n??o envia quando Last Name est?? vazio (HTML5 required)",
              "fullTitle": "Registro ??? b??sico est??vel n??o envia quando Last Name est?? vazio (HTML5 required)",
              "timedOut": null,
              "duration": 1650,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('N??o deveria chamar a API com last_name vazio');\n}).as('guard');\n$first().clear().type('Ada');\n$last().clear(); // vazio\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$last().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "d74b3084-50f8-4e47-be0f-3d5018493d2b",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "n??o envia quando Password est?? vazio (HTML5 required)",
              "fullTitle": "Registro ??? b??sico est??vel n??o envia quando Password est?? vazio (HTML5 required)",
              "timedOut": null,
              "duration": 1679,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('N??o deveria chamar a API com password vazio');\n}).as('guard');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear(); // vazio\n$submit().click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$password().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "37a65e3d-adde-4455-9289-96a8119df829",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sucesso (201) ??? URL da request bate no endpoint de registro",
              "fullTitle": "Registro ??? b??sico est??vel sucesso (201) ??? URL da request bate no endpoint de registro",
              "timedOut": null,
              "duration": 1961,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  expect(req.method).to.eq('POST');\n  expect(req.url).to.match(/\\/api\\/users\\/register\\/?/); // aceita com/sem barra final\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('regOk2');\nfill();\n$submit().click();\ncy.wait('@regOk2');\ncy.location('pathname', {\n  timeout: 4000\n}).should('match', /login|signin/i);",
              "err": {},
              "uuid": "856f0a9d-19c9-4930-b86f-307c193248fa",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sucesso (201) ??? payload n??o cont??m campos inesperados",
              "fullTitle": "Registro ??? b??sico est??vel sucesso (201) ??? payload n??o cont??m campos inesperados",
              "timedOut": null,
              "duration": 1658,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  const keys = Object.keys(req.body || {});\n  // Deve conter exatamente estes 4 campos (ordem n??o importa)\n  expect(keys.sort()).to.deep.eq(['email', 'first_name', 'last_name', 'password'].sort());\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('regOk3');\nfill();\n$submit().click();\ncy.wait('@regOk3');",
              "err": {},
              "uuid": "3e4478c3-3728-4e60-be46-93771245272c",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "500 (erro de servidor) ??? mostra alert amig??vel e permanece",
              "fullTitle": "Registro ??? b??sico est??vel 500 (erro de servidor) ??? mostra alert amig??vel e permanece",
              "timedOut": null,
              "duration": 1719,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 500,\n  body: {\n    detail: 'Server error'\n  }\n}).as('reg500simple');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\nfill();\n$submit().click();\ncy.wait('@reg500simple');\ncy.get('@alert').should('have.been.called'); // n??o prendemos a regex de texto\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "e161e9a2-ed45-47a7-944c-f1e497fd8aa2",
              "parentUUID": "f34ef0b0-9fb6-48d5-8b58-e5f0fde5958f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
              "title": "Registro ??? falhos de prop??sito",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "mostra toast no DOM em vez de alert no 409 (vai falhar)",
                  "fullTitle": "Registro ??? b??sico est??vel Registro ??? falhos de prop??sito mostra toast no DOM em vez de alert no 409 (vai falhar)",
                  "timedOut": null,
                  "duration": 5902,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 409,\n  body: {\n    detail: 'Email already exists'\n  }\n}).as('reg409');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@reg409');\n// o app usa window.alert; aqui exigimos um toast/alert DOM -> FALHA\ncy.get('[role=\"alert\"], .toast-error, .alert-danger').should('contain.text', /email/i);",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:281:58)",
                    "diff": null
                  },
                  "uuid": "0e476c75-80d4-437a-9e9d-62722aef7d1e",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "redireciona exatamente para /dashboard ap??s sucesso (vai falhar)",
                  "fullTitle": "Registro ??? b??sico est??vel Registro ??? falhos de prop??sito redireciona exatamente para /dashboard ap??s sucesso (vai falhar)",
                  "timedOut": null,
                  "duration": 5851,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('ok');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@ok');\n// teu app redireciona para /login; aqui exigimos /dashboard -> FALHA\ncy.location('pathname').should('eq', '/dashboard');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '/login' to equal '/dashboard'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '/login' to equal '/dashboard'\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:299:28)",
                    "diff": "- '/login'\n+ '/dashboard'\n"
                  },
                  "uuid": "ab652125-951e-4e29-9b1a-5b5e803afc13",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "trim estrito do email (vai falhar se o payload vier com espa??os)",
                  "fullTitle": "Registro ??? b??sico est??vel Registro ??? falhos de prop??sito trim estrito do email (vai falhar se o payload vier com espa??os)",
                  "timedOut": null,
                  "duration": 1809,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  var _req$body;\n  // exige e-mail sem espa??os no payload -> FALHA se o front n??o trimar antes de enviar\n  expect((_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.email).to.eq('user@example.com');\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('strictTrim');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('  user@example.com  ');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@strictTrim');",
                  "err": {},
                  "uuid": "2b70f66c-0727-4a4d-8b8e-3ed3e25f0969",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "duplo clique bloqueado: exatamente 1 request (vai falhar)",
                  "fullTitle": "Registro ??? b??sico est??vel Registro ??? falhos de prop??sito duplo clique bloqueado: exatamente 1 request (vai falhar)",
                  "timedOut": null,
                  "duration": 1873,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let hits = 0;\ncy.intercept('POST', REGISTER_GLOB, req => {\n  hits += 1;\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('ok');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click().click(); // spam proposital\ncy.wait('@ok');\n// exige 1 request exatamente -> usualmente >1 -> FALHA\ncy.wrap(null).should(() => expect(hits).to.eq(1));",
                  "err": {
                    "message": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                    "estack": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at isAttached (http://localhost:3000/__cypress/runner/cypress_runner.js:152448:58)\n    at validateType (http://localhost:3000/__cypress/runner/cypress_runner.js:152318:9)\n    at Object.isType (http://localhost:3000/__cypress/runner/cypress_runner.js:152353:7)\n    at $Cy.pushSubject (http://localhost:3000/__cypress/runner/cypress_runner.js:146022:22)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:145576:19)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:151524:15)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (http://localhost:3000/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)",
                    "diff": null
                  },
                  "uuid": "47a384cd-ff73-46a1-871e-09431ca9c0da",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "campo \"confirm\" deve existir e ser obrigat??rio (vai falhar)",
                  "fullTitle": "Registro ??? b??sico est??vel Registro ??? falhos de prop??sito campo \"confirm\" deve existir e ser obrigat??rio (vai falhar)",
                  "timedOut": null,
                  "duration": 4389,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// teu formul??rio n??o tem \"confirm\" -> FALHA\ncy.get('input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]').should('exist');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.contains(/confirme|confirm|igual/i).should('exist');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:339:92)",
                    "diff": null
                  },
                  "uuid": "d6dc715d-e85e-4981-88c2-83ca86caec8c",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "erro 400 deve ter header Content-Type JSON (vai falhar)",
                  "fullTitle": "Registro ??? b??sico est??vel Registro ??? falhos de prop??sito erro 400 deve ter header Content-Type JSON (vai falhar)",
                  "timedOut": null,
                  "duration": 6746,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  // responde SEM content-type propositalmente\n  req.reply({\n    statusCode: 400,\n    body: {\n      email: ['Formato inv??lido']\n    },\n    headers: {}\n  });\n}).as('noCT');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('invalido');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@noCT');\n// exige presence do header que N??O foi enviado -> FALHA\ncy.get('@noCT').its('response.headers.content-type').should('include', 'application/json');",
                  "err": {
                    "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `noCT`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                    "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `noCT`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://localhost:3000/__cypress/runner/cypress_runner.js:77924:18)\n    at Object.errByPath (http://localhost:3000/__cypress/runner/cypress_runner.js:77992:10)\n    at checkForXhr (http://localhost:3000/__cypress/runner/cypress_runner.js:138183:84)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:138208:28)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:151252:68)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:151193:14)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:5420:46)",
                    "diff": null
                  },
                  "uuid": "eced411d-c28a-4a3b-ab84-be3fa5f23ac4",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "salva email registrado no localStorage (vai falhar)",
                  "fullTitle": "Registro ??? b??sico est??vel Registro ??? falhos de prop??sito salva email registrado no localStorage (vai falhar)",
                  "timedOut": null,
                  "duration": 2314,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('ok');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@ok');\n// teu app n??o grava isso -> FALHA\ncy.window().then(win => {\n  expect(win.localStorage.getItem('registered_email')).to.eq('user@example.com');\n});",
                  "err": {
                    "message": "AssertionError: expected null to equal 'user@example.com'",
                    "estack": "AssertionError: expected null to equal 'user@example.com'\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:384:62)\n    at getRet (http://localhost:3000/__cypress/runner/cypress_runner.js:122243:20)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:3000/__cypress/runner/cypress_runner.js:122254:66)\n    at Context.then (http://localhost:3000/__cypress/runner/cypress_runner.js:122505:21)",
                    "diff": null
                  },
                  "uuid": "9074d70d-d5b2-450c-888b-d5712810dc97",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "mostra medidor de for??a de senha (vai falhar)",
                  "fullTitle": "Registro ??? b??sico est??vel Registro ??? falhos de prop??sito mostra medidor de for??a de senha (vai falhar)",
                  "timedOut": null,
                  "duration": 4737,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "$password().clear().type('Pass12345!');\n// teu app n??o tem este elemento -> FALHA\ncy.get('[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]').should('be.visible');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:391:80)",
                    "diff": null
                  },
                  "uuid": "af304b78-e324-44fc-afb8-681e299af230",
                  "parentUUID": "0fbe701c-14bf-4857-9f74-7079ccca14e5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b70f66c-0727-4a4d-8b8e-3ed3e25f0969"
              ],
              "failures": [
                "0e476c75-80d4-437a-9e9d-62722aef7d1e",
                "ab652125-951e-4e29-9b1a-5b5e803afc13",
                "47a384cd-ff73-46a1-871e-09431ca9c0da",
                "d6dc715d-e85e-4981-88c2-83ca86caec8c",
                "eced411d-c28a-4a3b-ab84-be3fa5f23ac4",
                "9074d70d-d5b2-450c-888b-d5712810dc97",
                "af304b78-e324-44fc-afb8-681e299af230"
              ],
              "pending": [],
              "skipped": [],
              "duration": 33621,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "a9cee13c-2523-4e57-b7ee-2d13d632d8eb",
            "6db6ec80-5f73-48ac-966a-35b6bfba6fa6",
            "540ed74e-a13e-48bb-b8c6-ac2760ae915d",
            "37af72a3-2c08-45c2-a405-eebd23ea0925",
            "eb60d984-3426-4982-9085-283f55dfd4fa",
            "69cdbadc-d1ba-4f75-8277-20383b23d8f9",
            "a8af6110-3d5e-41a2-8c2d-ebcd977af3bd",
            "d74b3084-50f8-4e47-be0f-3d5018493d2b",
            "37a65e3d-adde-4455-9289-96a8119df829",
            "856f0a9d-19c9-4930-b86f-307c193248fa",
            "3e4478c3-3728-4e60-be46-93771245272c",
            "e161e9a2-ed45-47a7-944c-f1e497fd8aa2"
          ],
          "failures": [
            "9aa6c796-bcfd-4982-8d25-13dedad96763"
          ],
          "pending": [],
          "skipped": [],
          "duration": 22113,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ff9bc31c-e032-460c-8548-c2744255e908",
      "title": "",
      "fullFile": "cypress\\e2e\\Login.cy.js",
      "file": "cypress\\e2e\\Login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2d47932d-72cd-4fc2-be33-08e1c929874b",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "mostra erro com credenciais inv??lidas",
              "fullTitle": "Login mostra erro com credenciais inv??lidas",
              "timedOut": null,
              "duration": 6210,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Invalid credentials'\n  }\n}).as('loginFail');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginFail');\ncy.get('@alert').should('have.been.called');\ncy.get('@alert').should('have.been.calledWithMatch', /invalid|inv??lid/i);\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "acb6f67a-cdac-4204-9fd8-189c3305f7f1",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login com sucesso redireciona",
              "fullTitle": "Login login com sucesso redireciona",
              "timedOut": null,
              "duration": 1183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  headers: {\n    'content-type': 'application/json'\n  },\n  body: {\n    access: 'fake-access-token',\n    refresh: 'fake-refresh-token'\n  }\n}).as('loginOk');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginOk');\ncy.location('pathname').should('not.include', 'login');",
              "err": {},
              "uuid": "54872668-9163-4739-9263-fbadc77a525c",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "erro 500 mostra mensagem amig??vel (alert)",
              "fullTitle": "Login erro 500 mostra mensagem amig??vel (alert)",
              "timedOut": null,
              "duration": 1094,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 500,\n  body: {\n    detail: 'Server error'\n  }\n}).as('serverErr');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@serverErr');\ncy.get('@alert').should('have.been.calledWithMatch', /erro|servidor|tente novamente/i);\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "b487c3ee-623b-4e22-bca4-f832a84124cc",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "valida????o 400 (faltou username/password) ??? for??a backend",
              "fullTitle": "Login valida????o 400 (faltou username/password) ??? for??a backend",
              "timedOut": null,
              "duration": 244,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 400,\n  body: {\n    username: ['Este campo ?? obrigat??rio.'],\n    password: ['Este campo ?? obrigat??rio.']\n  }\n}).as('badReq');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\n// Desliga valida????o nativa p/ permitir o POST sem campos\ncy.get('form.login-form').invoke('attr', 'novalidate', 'novalidate');\ncy.get('input[name=\"username\"]').invoke('prop', 'required', false);\ncy.get('input[name=\"password\"]').invoke('prop', 'required', false);\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@badReq');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "5fe6a09a-214a-4c79-b695-84b2a09f8e6d",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "401 sem \"detail\" n??o quebra (mostra algum alerta)",
              "fullTitle": "Login 401 sem \"detail\" n??o quebra (mostra algum alerta)",
              "timedOut": null,
              "duration": 1004,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    error: 'no-detail'\n  }\n}).as('weird');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@weird');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "666f120c-068f-4261-a7fc-290169bc8142",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "link de cadastro navega corretamente",
              "fullTitle": "Login link de cadastro navega corretamente",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('a', /sign\\s*up|criar\\s*conta/i).click({\n  force: true\n});\ncy.location('pathname').should('match', /register|signup|sign\\-up|cadastro/i);",
              "err": {},
              "uuid": "f5017668-3500-40b7-a196-2b87866b0d5c",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "password oculto por padr??o; alterna se existir toggle",
              "fullTitle": "Login password oculto por padr??o; alterna se existir toggle",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('form.login-form input[name=\"password\"]').should('have.attr', 'type', 'password');\ncy.get('body').then($b => {\n  const selectors = ['[data-cy=\"toggle-password\"]', 'button[aria-label*=\"mostrar\"]', 'button[aria-label*=\"show\"]', '.password-toggle', 'button:contains(\"Mostrar\")', 'button:contains(\"Show\")'];\n  const found = selectors.find(s => $b.find(s).length > 0);\n  if (found) {\n    cy.get(found).click();\n    cy.get('form.login-form input[name=\"password\"]').should('have.attr', 'type', 'text');\n  }\n});",
              "err": {},
              "uuid": "a6fcad12-b71d-42ba-9c4d-8540fc2db57a",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTML5 required: bloqueia submit quando username est?? vazio (nenhum POST)",
              "fullTitle": "Login HTML5 required: bloqueia submit quando username est?? vazio (nenhum POST)",
              "timedOut": null,
              "duration": 850,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, () => {\n  throw new Error('N??o deveria chamar API com username vazio (required)');\n}).as('guard');\ncy.get('form.login-form input[name=\"username\"]').clear(); // vazio\ncy.get('form.login-form input[name=\"password\"]').clear().type('Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\ncy.get('form.login-form input[name=\"username\"]').then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('include', 'login');\ncy.wait(100);",
              "err": {},
              "uuid": "3f550535-3ab1-456b-a7fe-06fb1ad0deca",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTML5 required: bloqueia submit quando password est?? vazio (nenhum POST)",
              "fullTitle": "Login HTML5 required: bloqueia submit quando password est?? vazio (nenhum POST)",
              "timedOut": null,
              "duration": 958,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, () => {\n  throw new Error('N??o deveria chamar API com password vazio (required)');\n}).as('guard');\ncy.get('form.login-form input[name=\"username\"]').clear().type('admin@example.com');\ncy.get('form.login-form input[name=\"password\"]').clear(); // vazio\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\ncy.get('form.login-form input[name=\"password\"]').then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('include', 'login');\ncy.wait(100);",
              "err": {},
              "uuid": "3a4d8aef-17b0-4dbf-9270-fc53c12a89c6",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter no campo password envia o formul??rio",
              "fullTitle": "Login Enter no campo password envia o formul??rio",
              "timedOut": null,
              "duration": 1052,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'fake-access-token',\n    refresh: 'fake-refresh-token'\n  }\n}).as('loginOkEnter');\ncy.get('form.login-form input[name=\"username\"]').clear().type('admin@example.com');\ncy.get('form.login-form input[name=\"password\"]').clear().type('Pass12345!{enter}');\ncy.wait('@loginOkEnter');",
              "err": {},
              "uuid": "476a00b4-11d4-4a94-bdc5-828e31be835f",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "payload correto: cont??m username e password",
              "fullTitle": "Login payload correto: cont??m username e password",
              "timedOut": null,
              "duration": 1078,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  expect(req.method).to.eq('POST');\n  expect(req.body).to.have.property('username', 'admin@example.com');\n  expect(req.body).to.have.property('password');\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'fake-access-token',\n      refresh: 'fake-refresh-token'\n    }\n  });\n}).as('loginPayload');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginPayload');",
              "err": {},
              "uuid": "c15e569c-67f2-44a4-bab7-7240365e538a",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "URL do endpoint confere",
              "fullTitle": "Login URL do endpoint confere",
              "timedOut": null,
              "duration": 1042,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  expect(req.url).to.match(/\\/api\\/users\\/login\\/?/);\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'fake-access-token',\n      refresh: 'fake-refresh-token'\n    }\n  });\n}).as('loginUrl');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginUrl');",
              "err": {},
              "uuid": "e6754ec4-13a1-435d-a7ea-25087730b5cf",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username com espa??os: tolerante (ignora espa??os ao comparar)",
              "fullTitle": "Login username com espa??os: tolerante (ignora espa??os ao comparar)",
              "timedOut": null,
              "duration": 1186,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  var _req$body;\n  const u = String(((_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.username) || '');\n  expect(u.replace(/\\s/g, '')).to.eq('admin@example.com');\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'fake-access-token',\n      refresh: 'fake-refresh-token'\n    }\n  });\n}).as('loginTrimTol');\ntypeLogin('  admin@example.com  ', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginTrimTol');",
              "err": {},
              "uuid": "1d9389d2-c963-4d00-b6c8-89c8df67196e",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "401 com mensagem PT/EN ainda dispara alert",
              "fullTitle": "Login 401 com mensagem PT/EN ainda dispara alert",
              "timedOut": null,
              "duration": 1054,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Credenciais inv??lidas'\n  }\n}).as('pt401');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@pt401');\ncy.get('@alert').should('have.been.called');",
              "err": {},
              "uuid": "871d0238-03e2-4988-8d63-da30f22d88f3",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Network error (sem status) mostra alert e permanece",
              "fullTitle": "Login Network error (sem status) mostra alert e permanece",
              "timedOut": null,
              "duration": 1415,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  forceNetworkError: true\n}).as('netErr');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@netErr');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "2e619d9e-ad64-47ad-ac15-cac8b505d7b9",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ap??s sucesso, algum item do localStorage cont??m o token de acesso",
              "fullTitle": "Login ap??s sucesso, algum item do localStorage cont??m o token de acesso",
              "timedOut": null,
              "duration": 1028,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'fake-access-token',\n    refresh: 'fake-refresh-token'\n  }\n}).as('loginOkLS');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginOkLS');\ncy.window().then(win => {\n  const hasAccessToken = Object.keys(win.localStorage).some(k => win.localStorage.getItem(k) === 'fake-access-token');\n  expect(hasAccessToken).to.eq(true);\n});",
              "err": {},
              "uuid": "53f0d455-a8ca-4cbf-a7d6-e9a05c149818",
              "parentUUID": "2d47932d-72cd-4fc2-be33-08e1c929874b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "acb6f67a-cdac-4204-9fd8-189c3305f7f1",
            "54872668-9163-4739-9263-fbadc77a525c",
            "b487c3ee-623b-4e22-bca4-f832a84124cc",
            "5fe6a09a-214a-4c79-b695-84b2a09f8e6d",
            "666f120c-068f-4261-a7fc-290169bc8142",
            "f5017668-3500-40b7-a196-2b87866b0d5c",
            "a6fcad12-b71d-42ba-9c4d-8540fc2db57a",
            "3f550535-3ab1-456b-a7fe-06fb1ad0deca",
            "3a4d8aef-17b0-4dbf-9270-fc53c12a89c6",
            "476a00b4-11d4-4a94-bdc5-828e31be835f",
            "c15e569c-67f2-44a4-bab7-7240365e538a",
            "e6754ec4-13a1-435d-a7ea-25087730b5cf",
            "1d9389d2-c963-4d00-b6c8-89c8df67196e",
            "871d0238-03e2-4988-8d63-da30f22d88f3",
            "2e619d9e-ad64-47ad-ac15-cac8b505d7b9",
            "53f0d455-a8ca-4cbf-a7d6-e9a05c149818"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19794,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "01a5d4f5-0ae1-461d-8814-56756a9a7bc9",
          "title": "Login (falhos de prop??sito)",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "exige toast no DOM ao inv??s de alert (vai falhar)",
              "fullTitle": "Login (falhos de prop??sito) exige toast no DOM ao inv??s de alert (vai falhar)",
              "timedOut": null,
              "duration": 5153,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Invalid credentials'\n  }\n}).as('fail');\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@fail');\ncy.get('[role=\"alert\"], .toast-error, .alert-danger').should('contain.text', 'Invalid credentials');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:251:58)",
                "diff": null
              },
              "uuid": "fb6a1715-017e-46e6-80f0-3ab286590c2f",
              "parentUUID": "01a5d4f5-0ae1-461d-8814-56756a9a7bc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "redireciona exatamente para /dashboard (vai falhar)",
              "fullTitle": "Login (falhos de prop??sito) redireciona exatamente para /dashboard (vai falhar)",
              "timedOut": null,
              "duration": 5193,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'a',\n    refresh: 'r'\n  }\n}).as('ok');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@ok');\ncy.location('pathname').should('eq', '/dashboard');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '/' to equal '/dashboard'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '/' to equal '/dashboard'\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:264:28)",
                "diff": "- '/'\n+ '/dashboard'\n"
              },
              "uuid": "0c99a0aa-e644-4642-b233-65d521fec585",
              "parentUUID": "01a5d4f5-0ae1-461d-8814-56756a9a7bc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "salva tokens com chaves jwt_access/jwt_refresh (vai falhar)",
              "fullTitle": "Login (falhos de prop??sito) salva tokens com chaves jwt_access/jwt_refresh (vai falhar)",
              "timedOut": null,
              "duration": 1222,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'a',\n    refresh: 'r'\n  }\n}).as('ok');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@ok');\ncy.window().then(win => {\n  expect(win.localStorage.getItem('jwt_access')).to.be.a('string');\n  expect(win.localStorage.getItem('jwt_refresh')).to.be.a('string');\n});",
              "err": {
                "message": "AssertionError: expected null to be a string",
                "estack": "AssertionError: expected null to be a string\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:278:60)\n    at getRet (http://localhost:3000/__cypress/runner/cypress_runner.js:122243:20)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:3000/__cypress/runner/cypress_runner.js:122254:66)\n    at Context.then (http://localhost:3000/__cypress/runner/cypress_runner.js:122505:21)",
                "diff": null
              },
              "uuid": "e96a68a1-8b6c-4744-804e-53138759282b",
              "parentUUID": "01a5d4f5-0ae1-461d-8814-56756a9a7bc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "bloqueia duplo clique: exatamente 1 request (vai falhar)",
              "fullTitle": "Login (falhos de prop??sito) bloqueia duplo clique: exatamente 1 request (vai falhar)",
              "timedOut": null,
              "duration": 1239,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let hits = 0;\ncy.intercept('POST', LOGIN_URL, req => {\n  hits += 1;\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'a',\n      refresh: 'r'\n    }\n  });\n}).as('ok');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click().click();\ncy.wait('@ok');\ncy.wrap(null).should(() => expect(hits).to.eq(1));",
              "err": {
                "message": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                "estack": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at isAttached (http://localhost:3000/__cypress/runner/cypress_runner.js:152448:58)\n    at validateType (http://localhost:3000/__cypress/runner/cypress_runner.js:152318:9)\n    at Object.isType (http://localhost:3000/__cypress/runner/cypress_runner.js:152353:7)\n    at $Cy.pushSubject (http://localhost:3000/__cypress/runner/cypress_runner.js:146022:22)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:145576:19)\nFrom Your Spec Code:\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:291:72)",
                "diff": null
              },
              "uuid": "078650e1-cccb-4e11-b7b5-21a917a686db",
              "parentUUID": "01a5d4f5-0ae1-461d-8814-56756a9a7bc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "trim estrito no username (vai falhar se n??o trimar)",
              "fullTitle": "Login (falhos de prop??sito) trim estrito no username (vai falhar se n??o trimar)",
              "timedOut": null,
              "duration": 1205,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  var _req$body2;\n  expect((_req$body2 = req.body) === null || _req$body2 === void 0 ? void 0 : _req$body2.username).to.eq('admin@example.com');\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'a',\n      refresh: 'r'\n    }\n  });\n}).as('ok');\ntypeLogin('  admin@example.com  ', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@ok');",
              "err": {
                "message": "AssertionError: expected '  admin@example.com  ' to equal 'admin@example.com'",
                "estack": "AssertionError: expected '  admin@example.com  ' to equal 'admin@example.com'\n    at eval (webpack://frontend/./cypress/e2e/Login.cy.js:299:36)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:144517:12)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at onBeforeRequest (http://localhost:3000/__cypress/runner/cypress_runner.js:144516:64)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:144194:28)",
                "diff": "- '  admin@example.com  '\n+ 'admin@example.com'\n"
              },
              "uuid": "ede21c1c-bc3a-438c-9ca6-2c0b3ce36944",
              "parentUUID": "01a5d4f5-0ae1-461d-8814-56756a9a7bc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "password vis??vel por padr??o (vai falhar)",
              "fullTitle": "Login (falhos de prop??sito) password vis??vel por padr??o (vai falhar)",
              "timedOut": null,
              "duration": 4292,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('form.login-form input[name=\"password\"]').should('have.attr', 'type', 'text');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<input.form-input>' to have attribute 'type' with the value 'text', but the value was 'password'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<input.form-input>' to have attribute 'type' with the value 'text', but the value was 'password'\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:309:53)",
                "diff": "- 'password'\n+ 'text'\n"
              },
              "uuid": "6cdbd1b8-a6a0-4872-9de5-4983a67f39b2",
              "parentUUID": "01a5d4f5-0ae1-461d-8814-56756a9a7bc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "mostra contador de tentativas restantes (vai falhar)",
              "fullTitle": "Login (falhos de prop??sito) mostra contador de tentativas restantes (vai falhar)",
              "timedOut": null,
              "duration": 5404,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Invalid credentials'\n  }\n}).as('fail');\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@fail');\ncy.get('[data-cy=\"attempts-left\"]').should('contain.text', '2 tentativas restantes');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"attempts-left\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"attempts-left\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:319:40)",
                "diff": null
              },
              "uuid": "bcda0792-0cb4-46bd-b95f-cfa2695fba18",
              "parentUUID": "01a5d4f5-0ae1-461d-8814-56756a9a7bc9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fb6a1715-017e-46e6-80f0-3ab286590c2f",
            "0c99a0aa-e644-4642-b233-65d521fec585",
            "e96a68a1-8b6c-4744-804e-53138759282b",
            "078650e1-cccb-4e11-b7b5-21a917a686db",
            "ede21c1c-bc3a-438c-9ca6-2c0b3ce36944",
            "6cdbd1b8-a6a0-4872-9de5-4983a67f39b2",
            "bcda0792-0cb4-46bd-b95f-cfa2695fba18"
          ],
          "pending": [],
          "skipped": [],
          "duration": 23708,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "02111cd6-53a2-4e4a-90c5-74be1a42985e",
      "title": "",
      "fullFile": "cypress\\e2e\\Register.cy.js",
      "file": "cypress\\e2e\\Register.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6ce204ad-ea7b-4705-a452-948d344a713c",
          "title": "Registro Testes Validos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renderiza campos, bot??o e link para login",
              "fullTitle": "Registro Testes Validos renderiza campos, bot??o e link para login",
              "timedOut": null,
              "duration": 341,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(/give\\.me/i).should('be.visible');\ncy.contains(/crie sua conta|create your account|sign up/i).should('be.visible');\n$first().should('be.visible');\n$last().should('be.visible');\n$email().should('be.visible');\n$password().should('be.visible');\n$submit().should('be.visible');\ncy.contains('a', /sign\\s*in|entrar|login/i).should('exist');",
              "err": {},
              "uuid": "5705b85b-021d-40cc-98a4-c9e012b99dbd",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sucesso (201) ??? envia os 4 campos e redireciona para /login",
              "fullTitle": "Registro Testes Validos sucesso (201) ??? envia os 4 campos e redireciona para /login",
              "timedOut": null,
              "duration": 1768,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  headers: {\n    'content-type': 'application/json'\n  },\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('regOk');\nfill();\n$submit().click();\ncy.wait('@regOk').its('request.body').should(body => {\n  expect(body).to.have.property('first_name');\n  expect(body).to.have.property('last_name');\n  expect(body).to.have.property('email');\n  expect(body).to.have.property('password');\n});\ncy.location('pathname', {\n  timeout: 4000\n}).should('match', /login|signin/i);",
              "err": {},
              "uuid": "94ebdef6-aa0d-4e5f-b3a6-37503a1c7851",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "409 (email j?? existe) ??? alerta e permanece na p??gina",
              "fullTitle": "Registro Testes Validos 409 (email j?? existe) ??? alerta e permanece na p??gina",
              "timedOut": null,
              "duration": 1731,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 409,\n  body: {\n    detail: 'Email already exists'\n  }\n}).as('reg409');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\nfill();\n$submit().click();\ncy.wait('@reg409');\ncy.get('@alert').should('have.been.called');\ncy.get('@alert').should('have.been.calledWithMatch', /email|existe|exists/i);\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "c80ef07f-b3ef-4a7d-a88d-04091114d637",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "400 (valida????o) ??? alerta gen??rico e permanece (sem bloquear pelo HTML5)",
              "fullTitle": "Registro Testes Validos 400 (valida????o) ??? alerta gen??rico e permanece (sem bloquear pelo HTML5)",
              "timedOut": null,
              "duration": 1577,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 400,\n  body: {\n    email: ['Formato inv??lido']\n  }\n}).as('reg400');\n// Desliga a valida????o nativa do navegador para este submit\n$form().invoke('attr', 'novalidate', 'novalidate');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\n// usa um email \"v??lido\" pra n??o acionar HTML5; quem retorna 400 ?? o backend simulado\nfill({\n  email: 'user@example.com',\n  pass: '123'\n});\n$submit().click();\ncy.wait('@reg400');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "b21b5a7c-0092-4e44-8bfb-2b0287466471",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "link \"Sign In\" navega para /login",
              "fullTitle": "Registro Testes Validos link \"Sign In\" navega para /login",
              "timedOut": null,
              "duration": 294,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('a', /sign\\s*in|entrar|login/i).click({\n  force: true\n});\ncy.location('pathname').should('match', /login|signin/i);",
              "err": {},
              "uuid": "dc3d0af5-19c8-43aa-8057-08f61198f8b1",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "bloqueia submit com HTML5 \"required\" quando First Name est?? vazio",
              "fullTitle": "Registro Testes Validos bloqueia submit com HTML5 \"required\" quando First Name est?? vazio",
              "timedOut": null,
              "duration": 1810,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Guarda de seguran??a: nenhuma chamada deve acontecer\ncy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('N??o deveria chamar a API com campos required vazios');\n}).as('guard');\n// deixa o first_name vazio; preenche o restante\n$first().clear(); // vazio\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n// tenta enviar\n$submit().click();\n// formul??rio inv??lido\n$form().then($f => {\n  expect($f[0].checkValidity()).to.eq(false);\n});\n// campo espec??fico inv??lido + mensagem nativa\n$first().then($i => {\n  const el = $i[0];\n  expect(el.checkValidity()).to.eq(false);\n  expect(el.validationMessage).to.match(/preencha|campo|fill|field/i);\n});\n// continua na mesma rota\ncy.location('pathname').should('match', /register|signup/i);\n// pequena espera para garantir que nada escapou\ncy.wait(200);",
              "err": {},
              "uuid": "2746d3e3-66b2-4332-8aad-d77de8227f2b",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "inputs possuem atributo required e password ?? type=\"password\"",
              "fullTitle": "Registro Testes Validos inputs possuem atributo required e password ?? type=\"password\"",
              "timedOut": null,
              "duration": 4332,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "$first().should('have.attr', 'required');\n$last().should('have.attr', 'required');\n$email().should('have.attr', 'required').and('have.attr', 'type', 'email');\n$password().should('have.attr', 'required').and('have.attr', 'type', 'password');",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: You attempted to make a chai-jQuery assertion on an object that is neither a DOM object or a jQuery object.\n\nThe chai-jQuery assertion you used was:\n\n  > attr\n\nThe invalid subject you asserted on was:\n\n  > required\n\nTo use chai-jQuery assertions your subject must be valid.\n\nThis can sometimes happen if a previous assertion changed the subject.",
                "estack": "CypressError: Timed out retrying after 4000ms: You attempted to make a chai-jQuery assertion on an object that is neither a DOM object or a jQuery object.\n\nThe chai-jQuery assertion you used was:\n\n  > attr\n\nThe invalid subject you asserted on was:\n\n  > required\n\nTo use chai-jQuery assertions your subject must be valid.\n\nThis can sometimes happen if a previous assertion changed the subject.\n    at Object.onInvalid (http://localhost:3000/__cypress/runner/cypress_runner.js:146257:68)\n    at assertDom (http://localhost:3000/__cypress/runner/cypress_runner.js:146932:26)\n    at Proxy.<anonymous> (http://localhost:3000/__cypress/runner/cypress_runner.js:147037:7)\n    at Proxy.methodWrapper (http://localhost:3000/__cypress/runner/cypress_runner.js:80530:25)\n    at applyChainer (http://localhost:3000/__cypress/runner/cypress_runner.js:121749:26)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:121802:16)\n    at arrayReduce (http://localhost:3000/__cypress/runner/cypress_runner.js:18675:21)\n    at lodash.reduce (http://localhost:3000/__cypress/runner/cypress_runner.js:27727:14)\n    at applyChainers (http://localhost:3000/__cypress/runner/cypress_runner.js:121780:68)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.shouldFn (http://localhost:3000/__cypress/runner/cypress_runner.js:121806:66)\n    at Context.and (http://localhost:3000/__cypress/runner/cypress_runner.js:121828:23)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:150511:39)\n    at assertions (http://localhost:3000/__cypress/runner/cypress_runner.js:150759:16)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Object.gotValue (http://localhost:3000/__cypress/runner/cypress_runner.js:6448:18)\n    at Object.gotAccum (http://localhost:3000/__cypress/runner/cypress_runner.js:6435:25)\n    at Object.tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\nFrom Your Spec Code:\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:147:45)",
                "diff": null
              },
              "uuid": "03350746-6a69-450d-aeb3-48f94d90b374",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "n??o envia quando Email ?? inv??lido (HTML5) ??? nenhum POST ocorre",
              "fullTitle": "Registro Testes Validos n??o envia quando Email ?? inv??lido (HTML5) ??? nenhum POST ocorre",
              "timedOut": null,
              "duration": 3096,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// guarda: nenhuma request deve sair\ncy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('N??o deveria chamar a API com email inv??lido pelo HTML5');\n}).as('guard');\n// Preenche com email inv??lido (sem @)\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('invalid-email');\n$password().clear().type('Pass12345!');\n$submit().click();\n// form e campo email inv??lidos\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$email().then($i => {\n  const el = $i[0];\n  expect(el.checkValidity()).to.eq(false);\n  // mensagem varia por idioma/navegador; s?? checamos palavras comuns\n  expect(el.validationMessage).to.match(/email|@|v??lido|valid/i);\n});\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "be86fb88-df8f-4aa7-949e-3ae818acb05d",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "n??o envia quando Last Name est?? vazio (HTML5 required)",
              "fullTitle": "Registro Testes Validos n??o envia quando Last Name est?? vazio (HTML5 required)",
              "timedOut": null,
              "duration": 5419,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('N??o deveria chamar a API com last_name vazio');\n}).as('guard');\n$first().clear().type('Ada');\n$last().clear(); // vazio\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$last().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "f8755ef9-a0fd-4cce-9473-36035fcb5015",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "n??o envia quando Password est?? vazio (HTML5 required)",
              "fullTitle": "Registro Testes Validos n??o envia quando Password est?? vazio (HTML5 required)",
              "timedOut": null,
              "duration": 1669,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('N??o deveria chamar a API com password vazio');\n}).as('guard');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear(); // vazio\n$submit().click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$password().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "ad4607cc-0d59-429d-8dd6-5184f4937918",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sucesso (201) ??? URL da request bate no endpoint de registro",
              "fullTitle": "Registro Testes Validos sucesso (201) ??? URL da request bate no endpoint de registro",
              "timedOut": null,
              "duration": 1947,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  expect(req.method).to.eq('POST');\n  expect(req.url).to.match(/\\/api\\/users\\/register\\/?/); // aceita com/sem barra final\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('regOk2');\nfill();\n$submit().click();\ncy.wait('@regOk2');\ncy.location('pathname', {\n  timeout: 4000\n}).should('match', /login|signin/i);",
              "err": {},
              "uuid": "2ec06a41-98fb-4056-8c86-d26ab09c8111",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sucesso (201) ??? payload n??o cont??m campos inesperados",
              "fullTitle": "Registro Testes Validos sucesso (201) ??? payload n??o cont??m campos inesperados",
              "timedOut": null,
              "duration": 1686,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  const keys = Object.keys(req.body || {});\n  // Deve conter exatamente estes 4 campos (ordem n??o importa)\n  expect(keys.sort()).to.deep.eq(['email', 'first_name', 'last_name', 'password'].sort());\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('regOk3');\nfill();\n$submit().click();\ncy.wait('@regOk3');",
              "err": {},
              "uuid": "59fac4ba-ee58-4aa4-8546-c6f1342a06e4",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "500 (erro de servidor) ??? mostra alert amig??vel e permanece",
              "fullTitle": "Registro Testes Validos 500 (erro de servidor) ??? mostra alert amig??vel e permanece",
              "timedOut": null,
              "duration": 1674,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 500,\n  body: {\n    detail: 'Server error'\n  }\n}).as('reg500simple');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\nfill();\n$submit().click();\ncy.wait('@reg500simple');\ncy.get('@alert').should('have.been.called'); // n??o prendemos a regex de texto\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "0cf8db33-f33e-4ecc-ac23-bc3680445e13",
              "parentUUID": "6ce204ad-ea7b-4705-a452-948d344a713c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "6b8768f4-dac9-400b-b914-2456862d88c7",
              "title": "Registro ??? falhos de proposito",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "mostra toast no DOM em vez de alert no 409 (vai falhar)",
                  "fullTitle": "Registro Testes Validos Registro ??? falhos de proposito mostra toast no DOM em vez de alert no 409 (vai falhar)",
                  "timedOut": null,
                  "duration": 5903,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 409,\n  body: {\n    detail: 'Email already exists'\n  }\n}).as('reg409');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@reg409');\n// o app usa window.alert; aqui exigimos um toast/alert DOM -> FALHA\ncy.get('[role=\"alert\"], .toast-error, .alert-danger').should('contain.text', /email/i);",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:281:58)",
                    "diff": null
                  },
                  "uuid": "9e3349b3-d28e-42b8-bdee-ff8e1475de30",
                  "parentUUID": "6b8768f4-dac9-400b-b914-2456862d88c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "redireciona exatamente para /dashboard ap??s sucesso (vai falhar)",
                  "fullTitle": "Registro Testes Validos Registro ??? falhos de proposito redireciona exatamente para /dashboard ap??s sucesso (vai falhar)",
                  "timedOut": null,
                  "duration": 5843,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('ok');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@ok');\n// teu app redireciona para /login; aqui exigimos /dashboard -> FALHA\ncy.location('pathname').should('eq', '/dashboard');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '/login' to equal '/dashboard'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '/login' to equal '/dashboard'\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:299:28)",
                    "diff": "- '/login'\n+ '/dashboard'\n"
                  },
                  "uuid": "87cc9e1c-3ce8-491b-a8e2-390ed2911c41",
                  "parentUUID": "6b8768f4-dac9-400b-b914-2456862d88c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "trim estrito do email (vai falhar se o payload vier com espa??os)",
                  "fullTitle": "Registro Testes Validos Registro ??? falhos de proposito trim estrito do email (vai falhar se o payload vier com espa??os)",
                  "timedOut": null,
                  "duration": 1794,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  var _req$body;\n  // exige e-mail sem espa??os no payload -> FALHA se o front n??o trimar antes de enviar\n  expect((_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.email).to.eq('user@example.com');\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('strictTrim');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('  user@example.com  ');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@strictTrim');",
                  "err": {},
                  "uuid": "ac820bf4-08a4-46f5-99ef-b07bfc5dca81",
                  "parentUUID": "6b8768f4-dac9-400b-b914-2456862d88c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "duplo clique bloqueado: exatamente 1 request (vai falhar)",
                  "fullTitle": "Registro Testes Validos Registro ??? falhos de proposito duplo clique bloqueado: exatamente 1 request (vai falhar)",
                  "timedOut": null,
                  "duration": 1856,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let hits = 0;\ncy.intercept('POST', REGISTER_GLOB, req => {\n  hits += 1;\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('ok');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click().click(); // spam proposital\ncy.wait('@ok');\n// exige 1 request exatamente -> usualmente >1 -> FALHA\ncy.wrap(null).should(() => expect(hits).to.eq(1));",
                  "err": {
                    "message": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                    "estack": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at isAttached (http://localhost:3000/__cypress/runner/cypress_runner.js:152448:58)\n    at validateType (http://localhost:3000/__cypress/runner/cypress_runner.js:152318:9)\n    at Object.isType (http://localhost:3000/__cypress/runner/cypress_runner.js:152353:7)\n    at $Cy.pushSubject (http://localhost:3000/__cypress/runner/cypress_runner.js:146022:22)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:145576:19)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:151524:15)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (http://localhost:3000/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)",
                    "diff": null
                  },
                  "uuid": "8ffe2259-7a4c-4482-9219-85983845c607",
                  "parentUUID": "6b8768f4-dac9-400b-b914-2456862d88c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "campo \"confirm\" deve existir e ser obrigat??rio (vai falhar)",
                  "fullTitle": "Registro Testes Validos Registro ??? falhos de proposito campo \"confirm\" deve existir e ser obrigat??rio (vai falhar)",
                  "timedOut": null,
                  "duration": 4348,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// teu formul??rio n??o tem \"confirm\" -> FALHA\ncy.get('input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]').should('exist');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.contains(/confirme|confirm|igual/i).should('exist');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:339:92)",
                    "diff": null
                  },
                  "uuid": "ab6588e9-901a-42cc-9c82-bfa8e99070e0",
                  "parentUUID": "6b8768f4-dac9-400b-b914-2456862d88c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "erro 400 deve ter header Content-Type JSON (vai falhar)",
                  "fullTitle": "Registro Testes Validos Registro ??? falhos de proposito erro 400 deve ter header Content-Type JSON (vai falhar)",
                  "timedOut": null,
                  "duration": 6737,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  // responde SEM content-type propositalmente\n  req.reply({\n    statusCode: 400,\n    body: {\n      email: ['Formato inv??lido']\n    },\n    headers: {}\n  });\n}).as('noCT');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('invalido');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@noCT');\n// exige presence do header que N??O foi enviado -> FALHA\ncy.get('@noCT').its('response.headers.content-type').should('include', 'application/json');",
                  "err": {
                    "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `noCT`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                    "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `noCT`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://localhost:3000/__cypress/runner/cypress_runner.js:77924:18)\n    at Object.errByPath (http://localhost:3000/__cypress/runner/cypress_runner.js:77992:10)\n    at checkForXhr (http://localhost:3000/__cypress/runner/cypress_runner.js:138183:84)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:138208:28)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:151252:68)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:151193:14)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:5420:46)",
                    "diff": null
                  },
                  "uuid": "2ae6a1d7-e28b-4f47-9259-e435ffb2794b",
                  "parentUUID": "6b8768f4-dac9-400b-b914-2456862d88c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "salva email registrado no localStorage (vai falhar)",
                  "fullTitle": "Registro Testes Validos Registro ??? falhos de proposito salva email registrado no localStorage (vai falhar)",
                  "timedOut": null,
                  "duration": 2208,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('ok');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.wait('@ok');\n// teu app n??o grava isso -> FALHA\ncy.window().then(win => {\n  expect(win.localStorage.getItem('registered_email')).to.eq('user@example.com');\n});",
                  "err": {
                    "message": "AssertionError: expected null to equal 'user@example.com'",
                    "estack": "AssertionError: expected null to equal 'user@example.com'\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:384:62)\n    at getRet (http://localhost:3000/__cypress/runner/cypress_runner.js:122243:20)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:3000/__cypress/runner/cypress_runner.js:122254:66)\n    at Context.then (http://localhost:3000/__cypress/runner/cypress_runner.js:122505:21)",
                    "diff": null
                  },
                  "uuid": "48a3dcf7-8ffb-4e36-bee1-60af263c016c",
                  "parentUUID": "6b8768f4-dac9-400b-b914-2456862d88c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "mostra medidor de for??a de senha (vai falhar)",
                  "fullTitle": "Registro Testes Validos Registro ??? falhos de proposito mostra medidor de for??a de senha (vai falhar)",
                  "timedOut": null,
                  "duration": 4706,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "$password().clear().type('Pass12345!');\n// teu app n??o tem este elemento -> FALHA\ncy.get('[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]').should('be.visible');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:391:80)",
                    "diff": null
                  },
                  "uuid": "7de9da47-9f27-4e33-ab58-649af9831c31",
                  "parentUUID": "6b8768f4-dac9-400b-b914-2456862d88c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ac820bf4-08a4-46f5-99ef-b07bfc5dca81"
              ],
              "failures": [
                "9e3349b3-d28e-42b8-bdee-ff8e1475de30",
                "87cc9e1c-3ce8-491b-a8e2-390ed2911c41",
                "8ffe2259-7a4c-4482-9219-85983845c607",
                "ab6588e9-901a-42cc-9c82-bfa8e99070e0",
                "2ae6a1d7-e28b-4f47-9259-e435ffb2794b",
                "48a3dcf7-8ffb-4e36-bee1-60af263c016c",
                "7de9da47-9f27-4e33-ab58-649af9831c31"
              ],
              "pending": [],
              "skipped": [],
              "duration": 33395,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "5705b85b-021d-40cc-98a4-c9e012b99dbd",
            "94ebdef6-aa0d-4e5f-b3a6-37503a1c7851",
            "c80ef07f-b3ef-4a7d-a88d-04091114d637",
            "b21b5a7c-0092-4e44-8bfb-2b0287466471",
            "dc3d0af5-19c8-43aa-8057-08f61198f8b1",
            "2746d3e3-66b2-4332-8aad-d77de8227f2b",
            "be86fb88-df8f-4aa7-949e-3ae818acb05d",
            "f8755ef9-a0fd-4cce-9473-36035fcb5015",
            "ad4607cc-0d59-429d-8dd6-5184f4937918",
            "2ec06a41-98fb-4056-8c86-d26ab09c8111",
            "59fac4ba-ee58-4aa4-8546-c6f1342a06e4",
            "0cf8db33-f33e-4ecc-ac23-bc3680445e13"
          ],
          "failures": [
            "03350746-6a69-450d-aeb3-48f94d90b374"
          ],
          "pending": [],
          "skipped": [],
          "duration": 27344,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "485b847e-a678-41a0-8f06-f6f55814e46b",
      "title": "",
      "fullFile": "cypress\\e2e\\Login.cy.js",
      "file": "cypress\\e2e\\Login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "credenciais invalidas -> alerta",
              "fullTitle": "Login credenciais invalidas -> alerta",
              "timedOut": null,
              "duration": 1561,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Invalid credentials'\n  }\n}).as('loginFail');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginFail');\ncy.get('@alert').should('have.been.called');\ncy.get('@alert').should('have.been.calledWithMatch', /invalid|inv??lid/i);\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "1bb1dfb5-22b5-4db5-9f9d-e499c6cc095c",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sucesso -> redireciona",
              "fullTitle": "Login sucesso -> redireciona",
              "timedOut": null,
              "duration": 1117,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  headers: {\n    'content-type': 'application/json'\n  },\n  body: {\n    access: 'fake-access-token',\n    refresh: 'fake-refresh-token'\n  }\n}).as('loginOk');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginOk');\ncy.location('pathname').should('not.include', 'login');",
              "err": {},
              "uuid": "c9c8e702-335e-40df-8019-363c0bafc963",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "erro 500 -> alerta",
              "fullTitle": "Login erro 500 -> alerta",
              "timedOut": null,
              "duration": 1125,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 500,\n  body: {\n    detail: 'Server error'\n  }\n}).as('serverErr');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@serverErr');\ncy.get('@alert').should('have.been.calledWithMatch', /erro|servidor|tente novamente/i);\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "abf08dab-1eee-4caa-abcd-6028428d1b4e",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validacao 400 -> alerta",
              "fullTitle": "Login validacao 400 -> alerta",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 400,\n  body: {\n    username: ['Este campo ?? obrigat??rio.'],\n    password: ['Este campo ?? obrigat??rio.']\n  }\n}).as('badReq');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\n// Desliga validacao nativa p/ permitir o POST sem campos\ncy.get('form.login-form').invoke('attr', 'novalidate', 'novalidate');\ncy.get('input[name=\"username\"]').invoke('prop', 'required', false);\ncy.get('input[name=\"password\"]').invoke('prop', 'required', false);\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@badReq');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "615f6b03-5da1-46b2-9901-020c2716c99e",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "401 sem detail -> alerta",
              "fullTitle": "Login 401 sem detail -> alerta",
              "timedOut": null,
              "duration": 1003,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    error: 'no-detail'\n  }\n}).as('weird');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@weird');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "49bc32ea-429e-4aac-97e6-322b707651f4",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "link cadastro funciona",
              "fullTitle": "Login link cadastro funciona",
              "timedOut": null,
              "duration": 236,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('a', /sign\\s*up|criar\\s*conta/i).click({\n  force: true\n});\ncy.location('pathname').should('match', /register|signup|sign\\-up|cadastro/i);",
              "err": {},
              "uuid": "8ca833b1-7190-4cc7-97c7-173dbe1d9536",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "senha oculta por padrao (toggle se existir)",
              "fullTitle": "Login senha oculta por padrao (toggle se existir)",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('form.login-form input[name=\"password\"]').should('have.attr', 'type', 'password');\ncy.get('body').then($b => {\n  const selectors = ['[data-cy=\"toggle-password\"]', 'button[aria-label*=\"mostrar\"]', 'button[aria-label*=\"show\"]', '.password-toggle', 'button:contains(\"Mostrar\")', 'button:contains(\"Show\")'];\n  const found = selectors.find(s => $b.find(s).length > 0);\n  if (found) {\n    cy.get(found).click();\n    cy.get('form.login-form input[name=\"password\"]').should('have.attr', 'type', 'text');\n  }\n});",
              "err": {},
              "uuid": "7d83ea58-a10e-417c-a0c5-ca2ea7316105",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "required bloqueia username vazio",
              "fullTitle": "Login required bloqueia username vazio",
              "timedOut": null,
              "duration": 872,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, () => {\n  throw new Error('Nao deveria chamar API com username vazio (required)');\n}).as('guard');\ncy.get('form.login-form input[name=\"username\"]').clear(); // vazio\ncy.get('form.login-form input[name=\"password\"]').clear().type('Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\ncy.get('form.login-form input[name=\"username\"]').then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('include', 'login');\ncy.wait(100);",
              "err": {},
              "uuid": "0b51a50d-ddd5-439a-929c-2f51a129938c",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "required bloqueia password vazio",
              "fullTitle": "Login required bloqueia password vazio",
              "timedOut": null,
              "duration": 975,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, () => {\n  throw new Error('Nao deveria chamar API com password vazio (required)');\n}).as('guard');\ncy.get('form.login-form input[name=\"username\"]').clear().type('admin@example.com');\ncy.get('form.login-form input[name=\"password\"]').clear(); // vazio\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\ncy.get('form.login-form input[name=\"password\"]').then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('include', 'login');\ncy.wait(100);",
              "err": {},
              "uuid": "eb20aa96-4b2c-4314-a007-a434493fd5cf",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "enter no password envia",
              "fullTitle": "Login enter no password envia",
              "timedOut": null,
              "duration": 958,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'fake-access-token',\n    refresh: 'fake-refresh-token'\n  }\n}).as('loginOkEnter');\ncy.get('form.login-form input[name=\"username\"]').clear().type('admin@example.com');\ncy.get('form.login-form input[name=\"password\"]').clear().type('Pass12345!{enter}');\ncy.wait('@loginOkEnter');",
              "err": {},
              "uuid": "6ddb1c15-0f21-4760-8a38-7c055178cc6a",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "payload correto",
              "fullTitle": "Login payload correto",
              "timedOut": null,
              "duration": 1067,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  expect(req.method).to.eq('POST');\n  expect(req.body).to.have.property('username', 'admin@example.com');\n  expect(req.body).to.have.property('password');\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'fake-access-token',\n      refresh: 'fake-refresh-token'\n    }\n  });\n}).as('loginPayload');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginPayload');",
              "err": {},
              "uuid": "86572c70-5aa3-4a99-98f1-5e931bebea58",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endpoint url ok",
              "fullTitle": "Login endpoint url ok",
              "timedOut": null,
              "duration": 1049,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  expect(req.url).to.match(/\\/api\\/users\\/login\\/?/);\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'fake-access-token',\n      refresh: 'fake-refresh-token'\n    }\n  });\n}).as('loginUrl');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginUrl');",
              "err": {},
              "uuid": "9a218d08-431b-4483-8bf5-5484f6e72eef",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username com espacos tolerante",
              "fullTitle": "Login username com espacos tolerante",
              "timedOut": null,
              "duration": 1134,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  var _req$body;\n  const u = String(((_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.username) || '');\n  expect(u.replace(/\\s/g, '')).to.eq('admin@example.com');\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'fake-access-token',\n      refresh: 'fake-refresh-token'\n    }\n  });\n}).as('loginTrimTol');\ntypeLogin('  admin@example.com  ', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginTrimTol');",
              "err": {},
              "uuid": "1ca5e61a-86aa-4cb5-b3ae-909f334dd11c",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "401 pt en -> alerta",
              "fullTitle": "Login 401 pt en -> alerta",
              "timedOut": null,
              "duration": 933,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Credenciais inv??lidas'\n  }\n}).as('pt401');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@pt401');\ncy.get('@alert').should('have.been.called');",
              "err": {},
              "uuid": "62ae9073-0f6f-4878-8aaa-cebd18b96688",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "erro de rede -> alerta",
              "fullTitle": "Login erro de rede -> alerta",
              "timedOut": null,
              "duration": 1361,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  forceNetworkError: true\n}).as('netErr');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@netErr');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "7c7f7e49-5786-4daf-a348-fdf9673dc502",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "apos sucesso localStorage tem access",
              "fullTitle": "Login apos sucesso localStorage tem access",
              "timedOut": null,
              "duration": 1044,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'fake-access-token',\n    refresh: 'fake-refresh-token'\n  }\n}).as('loginOkLS');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginOkLS');\ncy.window().then(win => {\n  const hasAccessToken = Object.keys(win.localStorage).some(k => win.localStorage.getItem(k) === 'fake-access-token');\n  expect(hasAccessToken).to.eq(true);\n});",
              "err": {},
              "uuid": "b814b9f2-cae3-4225-bdbc-c164494cea7a",
              "parentUUID": "b5535f1b-6af3-4632-a35e-6936f3c7b10d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1bb1dfb5-22b5-4db5-9f9d-e499c6cc095c",
            "c9c8e702-335e-40df-8019-363c0bafc963",
            "abf08dab-1eee-4caa-abcd-6028428d1b4e",
            "615f6b03-5da1-46b2-9901-020c2716c99e",
            "49bc32ea-429e-4aac-97e6-322b707651f4",
            "8ca833b1-7190-4cc7-97c7-173dbe1d9536",
            "7d83ea58-a10e-417c-a0c5-ca2ea7316105",
            "0b51a50d-ddd5-439a-929c-2f51a129938c",
            "eb20aa96-4b2c-4314-a007-a434493fd5cf",
            "6ddb1c15-0f21-4760-8a38-7c055178cc6a",
            "86572c70-5aa3-4a99-98f1-5e931bebea58",
            "9a218d08-431b-4483-8bf5-5484f6e72eef",
            "1ca5e61a-86aa-4cb5-b3ae-909f334dd11c",
            "62ae9073-0f6f-4878-8aaa-cebd18b96688",
            "7c7f7e49-5786-4daf-a348-fdf9673dc502",
            "b814b9f2-cae3-4225-bdbc-c164494cea7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14777,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7ab93bf0-afc6-45f2-b52d-3142563e092a",
          "title": "Login - falha proposital",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "espera toast no DOM (falha)",
              "fullTitle": "Login - falha proposital espera toast no DOM (falha)",
              "timedOut": null,
              "duration": 5116,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Invalid credentials'\n  }\n}).as('fail');\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@fail');\ncy.get('[role=\"alert\"], .toast-error, .alert-danger').should('contain.text', 'Invalid credentials');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:248:58)",
                "diff": null
              },
              "uuid": "66520963-82c7-4bf3-ab47-30182c9fa953",
              "parentUUID": "7ab93bf0-afc6-45f2-b52d-3142563e092a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "espera /dashboard (falha)",
              "fullTitle": "Login - falha proposital espera /dashboard (falha)",
              "timedOut": null,
              "duration": 5182,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'a',\n    refresh: 'r'\n  }\n}).as('ok');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@ok');\ncy.location('pathname').should('eq', '/dashboard');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '/' to equal '/dashboard'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '/' to equal '/dashboard'\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:261:28)",
                "diff": "- '/'\n+ '/dashboard'\n"
              },
              "uuid": "f667a8e1-2dbb-48a0-a8c3-0a8e394e82d1",
              "parentUUID": "7ab93bf0-afc6-45f2-b52d-3142563e092a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "espera jwt_access no storage (falha)",
              "fullTitle": "Login - falha proposital espera jwt_access no storage (falha)",
              "timedOut": null,
              "duration": 1182,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'a',\n    refresh: 'r'\n  }\n}).as('ok');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@ok');\ncy.window().then(win => {\n  expect(win.localStorage.getItem('jwt_access')).to.be.a('string');\n  expect(win.localStorage.getItem('jwt_refresh')).to.be.a('string');\n});",
              "err": {
                "message": "AssertionError: expected null to be a string",
                "estack": "AssertionError: expected null to be a string\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:275:60)\n    at getRet (http://localhost:3000/__cypress/runner/cypress_runner.js:122243:20)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:3000/__cypress/runner/cypress_runner.js:122254:66)\n    at Context.then (http://localhost:3000/__cypress/runner/cypress_runner.js:122505:21)",
                "diff": null
              },
              "uuid": "b4bd006d-b00c-4ffe-bfc1-91f80734858c",
              "parentUUID": "7ab93bf0-afc6-45f2-b52d-3142563e092a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "duplo clique -> 1 request (falha)",
              "fullTitle": "Login - falha proposital duplo clique -> 1 request (falha)",
              "timedOut": null,
              "duration": 1173,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let hits = 0;\ncy.intercept('POST', LOGIN_URL, req => {\n  hits += 1;\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'a',\n      refresh: 'r'\n    }\n  });\n}).as('ok');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click().click();\ncy.wait('@ok');\ncy.wrap(null).should(() => expect(hits).to.eq(1));",
              "err": {
                "message": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                "estack": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at isAttached (http://localhost:3000/__cypress/runner/cypress_runner.js:152448:58)\n    at validateType (http://localhost:3000/__cypress/runner/cypress_runner.js:152318:9)\n    at Object.isType (http://localhost:3000/__cypress/runner/cypress_runner.js:152353:7)\n    at $Cy.pushSubject (http://localhost:3000/__cypress/runner/cypress_runner.js:146022:22)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:145576:19)\nFrom Your Spec Code:\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:288:72)",
                "diff": null
              },
              "uuid": "f6525d16-5764-4bb6-a2ef-3df5d5f1acf3",
              "parentUUID": "7ab93bf0-afc6-45f2-b52d-3142563e092a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "trim estrito username (falha)",
              "fullTitle": "Login - falha proposital trim estrito username (falha)",
              "timedOut": null,
              "duration": 1217,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  var _req$body2;\n  expect((_req$body2 = req.body) === null || _req$body2 === void 0 ? void 0 : _req$body2.username).to.eq('admin@example.com');\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'a',\n      refresh: 'r'\n    }\n  });\n}).as('ok');\ntypeLogin('  admin@example.com  ', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@ok');",
              "err": {
                "message": "AssertionError: expected '  admin@example.com  ' to equal 'admin@example.com'",
                "estack": "AssertionError: expected '  admin@example.com  ' to equal 'admin@example.com'\n    at eval (webpack://frontend/./cypress/e2e/Login.cy.js:296:36)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:144517:12)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at onBeforeRequest (http://localhost:3000/__cypress/runner/cypress_runner.js:144516:64)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:144194:28)",
                "diff": "- '  admin@example.com  '\n+ 'admin@example.com'\n"
              },
              "uuid": "55ba24b9-1363-4298-a918-63870c4572f3",
              "parentUUID": "7ab93bf0-afc6-45f2-b52d-3142563e092a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "senha visivel por padrao (falha)",
              "fullTitle": "Login - falha proposital senha visivel por padrao (falha)",
              "timedOut": null,
              "duration": 4230,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('form.login-form input[name=\"password\"]').should('have.attr', 'type', 'text');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<input.form-input>' to have attribute 'type' with the value 'text', but the value was 'password'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<input.form-input>' to have attribute 'type' with the value 'text', but the value was 'password'\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:306:53)",
                "diff": "- 'password'\n+ 'text'\n"
              },
              "uuid": "1b6a931a-e351-45ad-8a30-39fe3d8d4194",
              "parentUUID": "7ab93bf0-afc6-45f2-b52d-3142563e092a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "contador de tentativas (falha)",
              "fullTitle": "Login - falha proposital contador de tentativas (falha)",
              "timedOut": null,
              "duration": 5517,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Invalid credentials'\n  }\n}).as('fail');\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@fail');\ncy.get('[data-cy=\"attempts-left\"]').should('contain.text', '2 tentativas restantes');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"attempts-left\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"attempts-left\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:316:40)",
                "diff": null
              },
              "uuid": "d9a3fd82-01a8-4af6-8601-30fcab2c1884",
              "parentUUID": "7ab93bf0-afc6-45f2-b52d-3142563e092a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "66520963-82c7-4bf3-ab47-30182c9fa953",
            "f667a8e1-2dbb-48a0-a8c3-0a8e394e82d1",
            "b4bd006d-b00c-4ffe-bfc1-91f80734858c",
            "f6525d16-5764-4bb6-a2ef-3df5d5f1acf3",
            "55ba24b9-1363-4298-a918-63870c4572f3",
            "1b6a931a-e351-45ad-8a30-39fe3d8d4194",
            "d9a3fd82-01a8-4af6-8601-30fcab2c1884"
          ],
          "pending": [],
          "skipped": [],
          "duration": 23617,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f711cba4-91a1-44aa-bf4b-189cb67c4183",
      "title": "",
      "fullFile": "cypress\\e2e\\Register.cy.js",
      "file": "cypress\\e2e\\Register.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "33b2f485-f318-4156-9f13-fa77759d5b84",
          "title": "Registro - ok",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renderiza formulario",
              "fullTitle": "Registro - ok renderiza formulario",
              "timedOut": null,
              "duration": 602,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(/give\\.me/i).should('be.visible');\ncy.contains(/crie sua conta|create your account|sign up/i).should('be.visible');\n$first().should('be.visible');\n$last().should('be.visible');\n$email().should('be.visible');\n$password().should('be.visible');\n$submit().should('be.visible');\ncy.contains('a', /sign\\s*in|entrar|login/i).should('exist');",
              "err": {},
              "uuid": "aaef6b93-589f-44cf-8f58-2da0a788fb3d",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sucesso 201 -> vai para login",
              "fullTitle": "Registro - ok sucesso 201 -> vai para login",
              "timedOut": null,
              "duration": 3781,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  headers: {\n    'content-type': 'application/json'\n  },\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('regOk');\nfill();\n$submit().click();\ncy.wait('@regOk').its('request.body').should(body => {\n  expect(body).to.have.property('first_name');\n  expect(body).to.have.property('last_name');\n  expect(body).to.have.property('email');\n  expect(body).to.have.property('password');\n});\ncy.location('pathname', {\n  timeout: 4000\n}).should('match', /login|signin/i);",
              "err": {},
              "uuid": "20891856-43f0-4e99-83d7-9c4a5bc3aa04",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "email ja existe 409 -> alerta e permanece",
              "fullTitle": "Registro - ok email ja existe 409 -> alerta e permanece",
              "timedOut": null,
              "duration": 3916,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 409,\n  body: {\n    detail: 'Email already exists'\n  }\n}).as('reg409');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\nfill();\n$submit().click();\ncy.wait('@reg409');\ncy.get('@alert').should('have.been.called');\ncy.get('@alert').should('have.been.calledWithMatch', /email|existe|exists/i);\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "73a6626d-2449-4c33-98a3-cb68b9bfed50",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validacao 400 -> alerta generico e permanece",
              "fullTitle": "Registro - ok validacao 400 -> alerta generico e permanece",
              "timedOut": null,
              "duration": 5267,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 400,\n  body: {\n    email: ['Formato invalido']\n  }\n}).as('reg400');\n$form().invoke('attr', 'novalidate', 'novalidate');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\nfill({\n  email: 'user@example.com',\n  pass: '123'\n});\n$submit().click();\ncy.wait('@reg400');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "59e0bfff-1a64-47c5-a5a3-10343addf328",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "link para login funciona",
              "fullTitle": "Registro - ok link para login funciona",
              "timedOut": null,
              "duration": 4329,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('a', /sign\\s*in|entrar|login/i).click({\n  force: true\n});\ncy.location('pathname').should('match', /login|signin/i);",
              "err": {},
              "uuid": "3cd67f7e-d478-4331-a35a-9d1a9d28f292",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "required bloqueia first name vazio",
              "fullTitle": "Registro - ok required bloqueia first name vazio",
              "timedOut": null,
              "duration": 3362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('Nao deveria chamar API com required vazio');\n}).as('guard');\n$first().clear();\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\n$form().then($f => expect($f[0].checkValidity()).to.eq(false));\n$first().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(200);",
              "err": {},
              "uuid": "b3b54d0a-665d-434a-8e76-20eb7b98994a",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "email invalido bloqueia submit",
              "fullTitle": "Registro - ok email invalido bloqueia submit",
              "timedOut": null,
              "duration": 1762,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('Nao deveria chamar API com email invalido');\n}).as('guard');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('invalid-email');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$email().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "baeb8a9b-d11c-4318-8c1d-6580fac8be71",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "required bloqueia last name vazio",
              "fullTitle": "Registro - ok required bloqueia last name vazio",
              "timedOut": null,
              "duration": 1656,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('Nao deveria chamar API com last vazio');\n}).as('guard');\n$first().clear().type('Ada');\n$last().clear();\n$email().clear().type('user@example.com');\n$password().clear().type('Pass12345!');\n$submit().click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$last().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "bd770015-b85b-4bf8-88e5-b2a6438239d3",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "required bloqueia password vazio",
              "fullTitle": "Registro - ok required bloqueia password vazio",
              "timedOut": null,
              "duration": 1615,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, () => {\n  throw new Error('Nao deveria chamar API com password vazio');\n}).as('guard');\n$first().clear().type('Ada');\n$last().clear().type('Lovelace');\n$email().clear().type('user@example.com');\n$password().clear();\n$submit().click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\n$password().then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('match', /register|signup/i);\ncy.wait(150);",
              "err": {},
              "uuid": "b71466e9-7d32-4287-bb8e-24ce06bb23ee",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endpoint url ok",
              "fullTitle": "Registro - ok endpoint url ok",
              "timedOut": null,
              "duration": 1957,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  expect(req.method).to.eq('POST');\n  expect(req.url).to.match(/\\/api\\/users\\/register\\/?/);\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('regOk2');\nfill();\n$submit().click();\ncy.wait('@regOk2');\ncy.location('pathname', {\n  timeout: 4000\n}).should('match', /login|signin/i);",
              "err": {},
              "uuid": "59edaca6-53c7-4e63-aa33-1661852a1d71",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "payload campos ok",
              "fullTitle": "Registro - ok payload campos ok",
              "timedOut": null,
              "duration": 3033,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  const keys = Object.keys(req.body || {});\n  expect(keys.sort()).to.deep.eq(['email', 'first_name', 'last_name', 'password'].sort());\n}).as('regOk3');\nfill();\n$submit().click();\ncy.wait('@regOk3');",
              "err": {},
              "uuid": "d6165995-fd4a-4c22-a7ec-c33e8b201914",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "erro 500 -> alerta e permanece",
              "fullTitle": "Registro - ok erro 500 -> alerta e permanece",
              "timedOut": null,
              "duration": 1668,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 500,\n  body: {\n    detail: 'Server error'\n  }\n}).as('reg500');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\nfill();\n$submit().click();\ncy.wait('@reg500');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('match', /register|signup/i);",
              "err": {},
              "uuid": "d2640170-cc89-4f3b-b402-93ebf470792e",
              "parentUUID": "33b2f485-f318-4156-9f13-fa77759d5b84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aaef6b93-589f-44cf-8f58-2da0a788fb3d",
            "20891856-43f0-4e99-83d7-9c4a5bc3aa04",
            "73a6626d-2449-4c33-98a3-cb68b9bfed50",
            "59e0bfff-1a64-47c5-a5a3-10343addf328",
            "3cd67f7e-d478-4331-a35a-9d1a9d28f292",
            "b3b54d0a-665d-434a-8e76-20eb7b98994a",
            "baeb8a9b-d11c-4318-8c1d-6580fac8be71",
            "bd770015-b85b-4bf8-88e5-b2a6438239d3",
            "b71466e9-7d32-4287-bb8e-24ce06bb23ee",
            "59edaca6-53c7-4e63-aa33-1661852a1d71",
            "d6165995-fd4a-4c22-a7ec-c33e8b201914",
            "d2640170-cc89-4f3b-b402-93ebf470792e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32948,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bd693d8e-ccac-495d-887a-37b403b817c7",
          "title": "Registro - falha proposital",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "espera toast no 409 (falha)",
              "fullTitle": "Registro - falha proposital espera toast no 409 (falha)",
              "timedOut": null,
              "duration": 5730,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 409,\n  body: {\n    detail: 'Email already exists'\n  }\n}).as('reg409');\nfill();\n$submit().click();\ncy.wait('@reg409');\ncy.get('[role=\"alert\"], .toast-error, .alert-danger').should('contain.text', /email/i);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:211:58)",
                "diff": null
              },
              "uuid": "7c7497da-6690-436e-8325-8522e759a77d",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "espera /dashboard apos sucesso (falha)",
              "fullTitle": "Registro - falha proposital espera /dashboard apos sucesso (falha)",
              "timedOut": null,
              "duration": 5766,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('ok');\nfill();\n$submit().click();\ncy.wait('@ok');\ncy.location('pathname').should('eq', '/dashboard');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '/login' to equal '/dashboard'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '/login' to equal '/dashboard'\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:219:28)",
                "diff": "- '/login'\n+ '/dashboard'\n"
              },
              "uuid": "9e106df9-35db-42ba-b1e7-d0a04dc13274",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "duplo clique -> 1 request (falha)",
              "fullTitle": "Registro - falha proposital duplo clique -> 1 request (falha)",
              "timedOut": null,
              "duration": 1775,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let hits = 0;\ncy.intercept('POST', REGISTER_GLOB, req => {\n  hits += 1;\n  req.reply({\n    statusCode: 201,\n    body: {\n      id: 1,\n      email: 'user@example.com'\n    }\n  });\n}).as('ok');\nfill();\n$submit().click().click();\ncy.wait('@ok');\ncy.wrap(null).should(() => expect(hits).to.eq(1));",
              "err": {
                "message": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                "estack": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at isAttached (http://localhost:3000/__cypress/runner/cypress_runner.js:152448:58)\n    at validateType (http://localhost:3000/__cypress/runner/cypress_runner.js:152318:9)\n    at Object.isType (http://localhost:3000/__cypress/runner/cypress_runner.js:152353:7)\n    at $Cy.pushSubject (http://localhost:3000/__cypress/runner/cypress_runner.js:146022:22)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:145576:19)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:151524:15)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (http://localhost:3000/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "35917d12-0511-4d92-9525-7fcf1051a37e",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "campo confirm deve existir (falha)",
              "fullTitle": "Registro - falha proposital campo confirm deve existir (falha)",
              "timedOut": null,
              "duration": 4229,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]').should('exist');\nfill();\n$submit().click();\ncy.contains(/confirme|confirm|igual/i).should('exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name=\"confirm\"], input[name=\"password2\"], input[placeholder*=\"Confirm\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:232:92)",
                "diff": null
              },
              "uuid": "cb2e58ea-b2be-4de5-8ae7-e7fb43fb5a7f",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "400 deve ter header JSON (falha)",
              "fullTitle": "Registro - falha proposital 400 deve ter header JSON (falha)",
              "timedOut": null,
              "duration": 6640,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, req => {\n  req.reply({\n    statusCode: 400,\n    body: {\n      email: ['Formato invalido']\n    },\n    headers: {}\n  });\n}).as('noCT');\nfill({\n  email: 'invalido'\n});\n$submit().click();\ncy.wait('@noCT');\ncy.get('@noCT').its('response.headers.content-type').should('include', 'application/json');",
              "err": {
                "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `noCT`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `noCT`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://localhost:3000/__cypress/runner/cypress_runner.js:77924:18)\n    at Object.errByPath (http://localhost:3000/__cypress/runner/cypress_runner.js:77992:10)\n    at checkForXhr (http://localhost:3000/__cypress/runner/cypress_runner.js:138183:84)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:138208:28)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:151252:68)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:151193:14)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:5420:46)",
                "diff": null
              },
              "uuid": "e87b1bbc-3274-4ef3-9deb-17debaf5344d",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "salva email no localStorage (falha)",
              "fullTitle": "Registro - falha proposital salva email no localStorage (falha)",
              "timedOut": null,
              "duration": 2086,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', REGISTER_GLOB, {\n  statusCode: 201,\n  body: {\n    id: 1,\n    email: 'user@example.com'\n  }\n}).as('ok');\nfill();\n$submit().click();\ncy.wait('@ok');\ncy.window().then(win => {\n  expect(win.localStorage.getItem('registered_email')).to.eq('user@example.com');\n});",
              "err": {
                "message": "AssertionError: expected null to equal 'user@example.com'",
                "estack": "AssertionError: expected null to equal 'user@example.com'\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:251:88)\n    at getRet (http://localhost:3000/__cypress/runner/cypress_runner.js:122243:20)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:3000/__cypress/runner/cypress_runner.js:122254:66)\n    at Context.then (http://localhost:3000/__cypress/runner/cypress_runner.js:122505:21)",
                "diff": null
              },
              "uuid": "18808c20-c3bd-4740-b706-4c16d438d7cf",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "mostra medidor de senha (falha)",
              "fullTitle": "Registro - falha proposital mostra medidor de senha (falha)",
              "timedOut": null,
              "duration": 4619,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "$password().clear().type('Pass12345!');\ncy.get('[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"password-strength\"], .password-strength, [role=\"meter\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Register.cy.js:256:80)",
                "diff": null
              },
              "uuid": "976b3272-449b-49fe-861b-8ae543608efa",
              "parentUUID": "bd693d8e-ccac-495d-887a-37b403b817c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7c7497da-6690-436e-8325-8522e759a77d",
            "9e106df9-35db-42ba-b1e7-d0a04dc13274",
            "35917d12-0511-4d92-9525-7fcf1051a37e",
            "cb2e58ea-b2be-4de5-8ae7-e7fb43fb5a7f",
            "e87b1bbc-3274-4ef3-9deb-17debaf5344d",
            "18808c20-c3bd-4740-b706-4c16d438d7cf",
            "976b3272-449b-49fe-861b-8ae543608efa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 30845,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3d566218-7609-47e7-9d96-e850e0d8335f",
      "title": "",
      "fullFile": "cypress\\e2e\\Login.cy.js",
      "file": "cypress\\e2e\\Login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
          "title": "Login (DOM atual)",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "mostra erro com credenciais inv??lidas",
              "fullTitle": "Login (DOM atual) mostra erro com credenciais inv??lidas",
              "timedOut": null,
              "duration": 1628,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Invalid credentials'\n  }\n}).as('loginFail');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginFail');\ncy.get('@alert').should('have.been.called');\ncy.get('@alert').should('have.been.calledWithMatch', /invalid|inv??lid/i);\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "e6c6e1fa-acdd-456c-ade8-98a5143898f4",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login com sucesso redireciona",
              "fullTitle": "Login (DOM atual) login com sucesso redireciona",
              "timedOut": null,
              "duration": 1095,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  headers: {\n    'content-type': 'application/json'\n  },\n  body: {\n    access: 'fake-access-token',\n    refresh: 'fake-refresh-token'\n  }\n}).as('loginOk');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginOk');\ncy.location('pathname').should('not.include', 'login');",
              "err": {},
              "uuid": "75be58b0-cad3-4585-92b8-0516af0d1d59",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "erro 500 mostra mensagem amig??vel (alert)",
              "fullTitle": "Login (DOM atual) erro 500 mostra mensagem amig??vel (alert)",
              "timedOut": null,
              "duration": 1135,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 500,\n  body: {\n    detail: 'Server error'\n  }\n}).as('serverErr');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@serverErr');\ncy.get('@alert').should('have.been.calledWithMatch', /erro|servidor|tente novamente/i);\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "5db507d1-2665-4548-b72e-458e0365ac95",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "valida????o 400 (faltou username/password) ??? for??a backend",
              "fullTitle": "Login (DOM atual) valida????o 400 (faltou username/password) ??? for??a backend",
              "timedOut": null,
              "duration": 225,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 400,\n  body: {\n    username: ['Este campo ?? obrigat??rio.'],\n    password: ['Este campo ?? obrigat??rio.']\n  }\n}).as('badReq');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\n// Desliga valida????o nativa p/ permitir o POST sem campos\ncy.get('form.login-form').invoke('attr', 'novalidate', 'novalidate');\ncy.get('input[name=\"username\"]').invoke('prop', 'required', false);\ncy.get('input[name=\"password\"]').invoke('prop', 'required', false);\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@badReq');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "fb4d97ed-a724-4025-9f57-c1fccab11142",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "401 sem \"detail\" n??o quebra (mostra algum alerta)",
              "fullTitle": "Login (DOM atual) 401 sem \"detail\" n??o quebra (mostra algum alerta)",
              "timedOut": null,
              "duration": 1006,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    error: 'no-detail'\n  }\n}).as('weird');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@weird');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "b3d64d04-4e5e-4ffb-b68b-ae527aa928bf",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "link de cadastro navega corretamente",
              "fullTitle": "Login (DOM atual) link de cadastro navega corretamente",
              "timedOut": null,
              "duration": 289,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('a', /sign\\s*up|criar\\s*conta/i).click({\n  force: true\n});\ncy.location('pathname').should('match', /register|signup|sign\\-up|cadastro/i);",
              "err": {},
              "uuid": "efb02a97-96b0-4e40-9d7e-562dfb496b16",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "password oculto por padr??o; alterna se existir toggle",
              "fullTitle": "Login (DOM atual) password oculto por padr??o; alterna se existir toggle",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('form.login-form input[name=\"password\"]').should('have.attr', 'type', 'password');\ncy.get('body').then($b => {\n  const selectors = ['[data-cy=\"toggle-password\"]', 'button[aria-label*=\"mostrar\"]', 'button[aria-label*=\"show\"]', '.password-toggle', 'button:contains(\"Mostrar\")', 'button:contains(\"Show\")'];\n  const found = selectors.find(s => $b.find(s).length > 0);\n  if (found) {\n    cy.get(found).click();\n    cy.get('form.login-form input[name=\"password\"]').should('have.attr', 'type', 'text');\n  }\n});",
              "err": {},
              "uuid": "0c7998ad-57b6-490e-9106-6d69c01e1502",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTML5 required: bloqueia submit quando username est?? vazio (nenhum POST)",
              "fullTitle": "Login (DOM atual) HTML5 required: bloqueia submit quando username est?? vazio (nenhum POST)",
              "timedOut": null,
              "duration": 883,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, () => {\n  throw new Error('N??o deveria chamar API com username vazio (required)');\n}).as('guard');\ncy.get('form.login-form input[name=\"username\"]').clear(); // vazio\ncy.get('form.login-form input[name=\"password\"]').clear().type('Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\ncy.get('form.login-form input[name=\"username\"]').then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('include', 'login');\ncy.wait(100);",
              "err": {},
              "uuid": "176fcf23-6502-4f00-b4b6-542db5a8a900",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTML5 required: bloqueia submit quando password est?? vazio (nenhum POST)",
              "fullTitle": "Login (DOM atual) HTML5 required: bloqueia submit quando password est?? vazio (nenhum POST)",
              "timedOut": null,
              "duration": 952,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, () => {\n  throw new Error('N??o deveria chamar API com password vazio (required)');\n}).as('guard');\ncy.get('form.login-form input[name=\"username\"]').clear().type('admin@example.com');\ncy.get('form.login-form input[name=\"password\"]').clear(); // vazio\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.get('form.login-form').then($f => expect($f[0].checkValidity()).to.eq(false));\ncy.get('form.login-form input[name=\"password\"]').then($i => expect($i[0].checkValidity()).to.eq(false));\ncy.location('pathname').should('include', 'login');\ncy.wait(100);",
              "err": {},
              "uuid": "2572286d-6442-4f1e-aa2f-e766abec9303",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter no campo password envia o formul??rio",
              "fullTitle": "Login (DOM atual) Enter no campo password envia o formul??rio",
              "timedOut": null,
              "duration": 1006,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'fake-access-token',\n    refresh: 'fake-refresh-token'\n  }\n}).as('loginOkEnter');\ncy.get('form.login-form input[name=\"username\"]').clear().type('admin@example.com');\ncy.get('form.login-form input[name=\"password\"]').clear().type('Pass12345!{enter}');\ncy.wait('@loginOkEnter');",
              "err": {},
              "uuid": "05c24d48-3759-4958-8475-743095228c76",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "payload correto: cont??m username e password",
              "fullTitle": "Login (DOM atual) payload correto: cont??m username e password",
              "timedOut": null,
              "duration": 1452,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  expect(req.method).to.eq('POST');\n  expect(req.body).to.have.property('username', 'admin@example.com');\n  expect(req.body).to.have.property('password');\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'fake-access-token',\n      refresh: 'fake-refresh-token'\n    }\n  });\n}).as('loginPayload');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginPayload');",
              "err": {},
              "uuid": "e4ccad19-2f5b-480a-88e3-d967046d0295",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "URL do endpoint confere",
              "fullTitle": "Login (DOM atual) URL do endpoint confere",
              "timedOut": null,
              "duration": 1525,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  expect(req.url).to.match(/\\/api\\/users\\/login\\/?/);\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'fake-access-token',\n      refresh: 'fake-refresh-token'\n    }\n  });\n}).as('loginUrl');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginUrl');",
              "err": {},
              "uuid": "992a66c0-58a0-4939-9eec-3d82858ed409",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username com espa??os: tolerante (ignora espa??os ao comparar)",
              "fullTitle": "Login (DOM atual) username com espa??os: tolerante (ignora espa??os ao comparar)",
              "timedOut": null,
              "duration": 1585,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  var _req$body;\n  const u = String(((_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.username) || '');\n  expect(u.replace(/\\s/g, '')).to.eq('admin@example.com');\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'fake-access-token',\n      refresh: 'fake-refresh-token'\n    }\n  });\n}).as('loginTrimTol');\ntypeLogin('  admin@example.com  ', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginTrimTol');",
              "err": {},
              "uuid": "5ed614ff-bc7e-4dcf-967a-abded6504f2e",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "401 com mensagem PT/EN ainda dispara alert",
              "fullTitle": "Login (DOM atual) 401 com mensagem PT/EN ainda dispara alert",
              "timedOut": null,
              "duration": 1386,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Credenciais inv??lidas'\n  }\n}).as('pt401');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@pt401');\ncy.get('@alert').should('have.been.called');",
              "err": {},
              "uuid": "491a8bc3-4a93-4a20-935e-e8f9a273f696",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Network error (sem status) mostra alert e permanece",
              "fullTitle": "Login (DOM atual) Network error (sem status) mostra alert e permanece",
              "timedOut": null,
              "duration": 1759,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  forceNetworkError: true\n}).as('netErr');\ncy.window().then(win => cy.stub(win, 'alert').as('alert'));\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@netErr');\ncy.get('@alert').should('have.been.called');\ncy.location('pathname').should('include', 'login');",
              "err": {},
              "uuid": "cf52fc36-880a-44fa-97b8-7d04b1e6a5a2",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ap??s sucesso, algum item do localStorage cont??m o token de acesso",
              "fullTitle": "Login (DOM atual) ap??s sucesso, algum item do localStorage cont??m o token de acesso",
              "timedOut": null,
              "duration": 1396,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'fake-access-token',\n    refresh: 'fake-refresh-token'\n  }\n}).as('loginOkLS');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@loginOkLS');\ncy.window().then(win => {\n  const hasAccessToken = Object.keys(win.localStorage).some(k => win.localStorage.getItem(k) === 'fake-access-token');\n  expect(hasAccessToken).to.eq(true);\n});",
              "err": {},
              "uuid": "08e4ad37-bd60-47ef-80a1-f5d079833a4b",
              "parentUUID": "d760ab9b-5b81-43f9-87a3-a8a5de116520",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e6c6e1fa-acdd-456c-ade8-98a5143898f4",
            "75be58b0-cad3-4585-92b8-0516af0d1d59",
            "5db507d1-2665-4548-b72e-458e0365ac95",
            "fb4d97ed-a724-4025-9f57-c1fccab11142",
            "b3d64d04-4e5e-4ffb-b68b-ae527aa928bf",
            "efb02a97-96b0-4e40-9d7e-562dfb496b16",
            "0c7998ad-57b6-490e-9106-6d69c01e1502",
            "176fcf23-6502-4f00-b4b6-542db5a8a900",
            "2572286d-6442-4f1e-aa2f-e766abec9303",
            "05c24d48-3759-4958-8475-743095228c76",
            "e4ccad19-2f5b-480a-88e3-d967046d0295",
            "992a66c0-58a0-4939-9eec-3d82858ed409",
            "5ed614ff-bc7e-4dcf-967a-abded6504f2e",
            "491a8bc3-4a93-4a20-935e-e8f9a273f696",
            "cf52fc36-880a-44fa-97b8-7d04b1e6a5a2",
            "08e4ad37-bd60-47ef-80a1-f5d079833a4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17450,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1d694f29-7cc2-48d7-8176-3d18207890d2",
          "title": "Login (falhos de prop??sito)",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "exige toast no DOM ao inv??s de alert (vai falhar)",
              "fullTitle": "Login (falhos de prop??sito) exige toast no DOM ao inv??s de alert (vai falhar)",
              "timedOut": null,
              "duration": 5537,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Invalid credentials'\n  }\n}).as('fail');\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@fail');\ncy.get('[role=\"alert\"], .toast-error, .alert-danger').should('contain.text', 'Invalid credentials');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[role=\"alert\"], .toast-error, .alert-danger`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:251:58)",
                "diff": null
              },
              "uuid": "57664d48-d6ce-49da-bda6-082de141782d",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "redireciona exatamente para /dashboard (vai falhar)",
              "fullTitle": "Login (falhos de prop??sito) redireciona exatamente para /dashboard (vai falhar)",
              "timedOut": null,
              "duration": 5193,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'a',\n    refresh: 'r'\n  }\n}).as('ok');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@ok');\ncy.location('pathname').should('eq', '/dashboard');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '/' to equal '/dashboard'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '/' to equal '/dashboard'\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:264:28)",
                "diff": "- '/'\n+ '/dashboard'\n"
              },
              "uuid": "2add0ee0-4663-4155-a924-7e6d02e725f1",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "salva tokens com chaves jwt_access/jwt_refresh (vai falhar)",
              "fullTitle": "Login (falhos de prop??sito) salva tokens com chaves jwt_access/jwt_refresh (vai falhar)",
              "timedOut": null,
              "duration": 1165,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 200,\n  body: {\n    access: 'a',\n    refresh: 'r'\n  }\n}).as('ok');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@ok');\ncy.window().then(win => {\n  expect(win.localStorage.getItem('jwt_access')).to.be.a('string');\n  expect(win.localStorage.getItem('jwt_refresh')).to.be.a('string');\n});",
              "err": {
                "message": "AssertionError: expected null to be a string",
                "estack": "AssertionError: expected null to be a string\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:278:60)\n    at getRet (http://localhost:3000/__cypress/runner/cypress_runner.js:122243:20)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:3000/__cypress/runner/cypress_runner.js:122254:66)\n    at Context.then (http://localhost:3000/__cypress/runner/cypress_runner.js:122505:21)",
                "diff": null
              },
              "uuid": "6b36fec7-fc78-439f-a4ba-6dec3a176fd1",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "bloqueia duplo clique: exatamente 1 request (vai falhar)",
              "fullTitle": "Login (falhos de prop??sito) bloqueia duplo clique: exatamente 1 request (vai falhar)",
              "timedOut": null,
              "duration": 1181,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let hits = 0;\ncy.intercept('POST', LOGIN_URL, req => {\n  hits += 1;\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'a',\n      refresh: 'r'\n    }\n  });\n}).as('ok');\ntypeLogin('admin@example.com', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click().click();\ncy.wait('@ok');\ncy.wrap(null).should(() => expect(hits).to.eq(1));",
              "err": {
                "message": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                "estack": "CypressError: `cy.click()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.click()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at isAttached (http://localhost:3000/__cypress/runner/cypress_runner.js:152448:58)\n    at validateType (http://localhost:3000/__cypress/runner/cypress_runner.js:152318:9)\n    at Object.isType (http://localhost:3000/__cypress/runner/cypress_runner.js:152353:7)\n    at $Cy.pushSubject (http://localhost:3000/__cypress/runner/cypress_runner.js:146022:22)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:145576:19)\nFrom Your Spec Code:\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:291:72)",
                "diff": null
              },
              "uuid": "0f8f55e1-af03-48d1-a016-09d5a3b5762f",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "trim estrito no username (vai falhar se n??o trimar)",
              "fullTitle": "Login (falhos de prop??sito) trim estrito no username (vai falhar se n??o trimar)",
              "timedOut": null,
              "duration": 1196,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, req => {\n  var _req$body2;\n  expect((_req$body2 = req.body) === null || _req$body2 === void 0 ? void 0 : _req$body2.username).to.eq('admin@example.com');\n  req.reply({\n    statusCode: 200,\n    body: {\n      access: 'a',\n      refresh: 'r'\n    }\n  });\n}).as('ok');\ntypeLogin('  admin@example.com  ', 'Pass12345!');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@ok');",
              "err": {
                "message": "AssertionError: expected '  admin@example.com  ' to equal 'admin@example.com'",
                "estack": "AssertionError: expected '  admin@example.com  ' to equal 'admin@example.com'\n    at eval (webpack://frontend/./cypress/e2e/Login.cy.js:299:36)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:144517:12)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at onBeforeRequest (http://localhost:3000/__cypress/runner/cypress_runner.js:144516:64)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:144194:28)",
                "diff": "- '  admin@example.com  '\n+ 'admin@example.com'\n"
              },
              "uuid": "2a275d5d-24cd-4a1d-aec0-7e240a6e072a",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "password vis??vel por padr??o (vai falhar)",
              "fullTitle": "Login (falhos de prop??sito) password vis??vel por padr??o (vai falhar)",
              "timedOut": null,
              "duration": 4315,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('form.login-form input[name=\"password\"]').should('have.attr', 'type', 'text');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<input.form-input>' to have attribute 'type' with the value 'text', but the value was 'password'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<input.form-input>' to have attribute 'type' with the value 'text', but the value was 'password'\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:309:53)",
                "diff": "- 'password'\n+ 'text'\n"
              },
              "uuid": "a7fcfdad-115f-4ee0-9413-29f2fe2b72ce",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "mostra contador de tentativas restantes (vai falhar)",
              "fullTitle": "Login (falhos de prop??sito) mostra contador de tentativas restantes (vai falhar)",
              "timedOut": null,
              "duration": 5411,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', LOGIN_URL, {\n  statusCode: 401,\n  body: {\n    detail: 'Invalid credentials'\n  }\n}).as('fail');\ntypeLogin('admin@example.com', 'wrong');\ncy.get('form.login-form button.form-button[type=\"submit\"]').click();\ncy.wait('@fail');\ncy.get('[data-cy=\"attempts-left\"]').should('contain.text', '2 tentativas restantes');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"attempts-left\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=\"attempts-left\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/Login.cy.js:319:40)",
                "diff": null
              },
              "uuid": "32112d9a-712d-48f4-bcdc-4e751763b445",
              "parentUUID": "1d694f29-7cc2-48d7-8176-3d18207890d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "57664d48-d6ce-49da-bda6-082de141782d",
            "2add0ee0-4663-4155-a924-7e6d02e725f1",
            "6b36fec7-fc78-439f-a4ba-6dec3a176fd1",
            "0f8f55e1-af03-48d1-a016-09d5a3b5762f",
            "2a275d5d-24cd-4a1d-aec0-7e240a6e072a",
            "a7fcfdad-115f-4ee0-9413-29f2fe2b72ce",
            "32112d9a-712d-48f4-bcdc-4e751763b445"
          ],
          "pending": [],
          "skipped": [],
          "duration": 23998,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}
