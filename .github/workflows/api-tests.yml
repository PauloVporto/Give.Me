name: Frontend E2E (Cypress)

on:
  push:
    branches: [ main, Tests, Postman ]
  pull_request:
    branches: [ main, Tests ]

jobs:
  # e2e:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '22'
  #         cache: 'npm'
  #         cache-dependency-path: frontend/package-lock.json
          
  #     - name: Instalar dependências
  #       working-directory: frontend
  #       run: npm ci
  
  tests_front:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Ambiente
        uses: actions/setup-node@v4
        with:
          node-version: '22'
  
      - name: Instalar dependências
        working-directory: frontend
        run: |
          npm ci

      - name: Rodar testes E2E com Cypress
        working-directory: frontend
        run: npx start-server-and-test "npm run dev" http://localhost:3000 "cypress run --browser chrome"

      - name: Upload relatório de testes
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: |
            frontend/cypress/videos/
            frontend/cypress/screenshots/



            
  tests_Back:
    runs-on: ubuntu-latest
    env:
      DB_NAME: ci_test_db
      DB_USER: ci_user
      DB_PW: ci_password
      DB_HOST: postgres 
      DB_PORT: 5432
      
    services:
       postgres:
          image: postgres:15-alpine
          env:
            POSTGRES_DB: ci_test_db
            POSTGRES_USER: ci_user         
            POSTGRES_PASSWORD: ci_password   
          ports:
            - 5432:5432
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
            
    steps:    
      - name: Checkout código
        uses: actions/checkout@v4
      - name: Instalar Bibliotecas de Sistema
        run: |
          sudo apt-get update
          sudo apt-get install -y libjpeg-dev zlib1g-dev libpq-dev
        
      - name: Configurar Ambiente
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
  
      - name: Instalar dependências
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar testes pytest
        working-directory: backend
        run: python -m pytest

      - name: Upload relatório de testes
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-report
          path: |
            backend/test-report.xml


            
